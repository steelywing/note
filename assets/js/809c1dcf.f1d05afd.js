"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[9352],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return s}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),o=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=o(e.components);return a.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),k=o(n),s=r,c=k["".concat(d,".").concat(s)]||k[s]||m[s]||l;return n?a.createElement(c,i(i({ref:t},u),{},{components:n})):a.createElement(c,i({ref:t},u))}));function s(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=k;var p={};for(var d in t)hasOwnProperty.call(t,d)&&(p[d]=t[d]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var o=2;o<l;o++)i[o]=n[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},7961:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return d},metadata:function(){return o},toc:function(){return u},default:function(){return k}});var a=n(3117),r=n(102),l=(n(7294),n(3905)),i=["components"],p={sidebar_label:"Network"},d="Network - Linux",o={unversionedId:"Linux/Network",id:"Linux/Network",title:"Network - Linux",description:"Firewall",source:"@site/docs/Linux/Network.md",sourceDirName:"Linux",slug:"/Linux/Network",permalink:"/note/Linux/Network",editUrl:"https://github.com/steelywing/note/edit/master/docs/Linux/Network.md",tags:[],version:"current",frontMatter:{sidebar_label:"Network"},sidebar:"linux",previous:{title:"Mount",permalink:"/note/Linux/Mount"},next:{title:"Nmap",permalink:"/note/Linux/Nmap"}},u=[{value:"Firewall",id:"firewall",children:[{value:"iptables",id:"iptables",children:[],level:3},{value:"nftables",id:"nftables",children:[],level:3}],level:2},{value:"IP forward",id:"ip-forward",children:[],level:2},{value:"Ping",id:"ping",children:[],level:2},{value:"Nmap",id:"nmap",children:[],level:2},{value:"TCP Dump",id:"tcp-dump",children:[],level:2},{value:"IP",id:"ip",children:[{value:"Interface",id:"interface",children:[],level:3},{value:"IP address",id:"ip-address",children:[],level:3},{value:"ARP / Neighbour",id:"arp--neighbour",children:[],level:3},{value:"Route",id:"route",children:[],level:3}],level:2},{value:"Socket statistics",id:"socket-statistics",children:[],level:2},{value:"Traffic control",id:"traffic-control",children:[{value:"netem (Network Emulator)",id:"netem-network-emulator",children:[],level:3},{value:"TBF (Token Bucket Filter)",id:"tbf-token-bucket-filter",children:[],level:3}],level:2},{value:"Network manager",id:"network-manager",children:[],level:2}],m={toc:u};function k(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"network---linux"},"Network - Linux"),(0,l.kt)("h2",{id:"firewall"},"Firewall"),(0,l.kt)("h3",{id:"iptables"},(0,l.kt)("a",{parentName:"h3",href:"/note/Linux/iptables"},"iptables")),(0,l.kt)("h3",{id:"nftables"},"nftables"),(0,l.kt)("h2",{id:"ip-forward"},"IP forward"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("a",{parentName:"p",href:"https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/4/html/Security_Guide/s1-firewall-ipt-fwd.html"},"Reference"))),(0,l.kt)("p",null,"Get IP forward setting"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sysctl net.ipv4.ip_forward\n")),(0,l.kt)("p",null,"Set IP forward setting (",(0,l.kt)("inlineCode",{parentName:"p"},"0")," = Disable, ",(0,l.kt)("inlineCode",{parentName:"p"},"1")," = Enable)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sysctl -w net.ipv4.ip_forward={0|1}\n")),(0,l.kt)("p",null,"Set IP forward on boot"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:'language-title="/etc/sysctl.conf"'},"net.ipv4.ip_forward = {0|1}\n")),(0,l.kt)("h2",{id:"ping"},"Ping"),(0,l.kt)("p",null,"Display timeout"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ping -O <IP address>\n")),(0,l.kt)("p",null,"Display time"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'ping <IP address> | while read log; do\n  echo "$(date): $log";\ndone\n')),(0,l.kt)("h2",{id:"nmap"},(0,l.kt)("a",{parentName:"h2",href:"/note/Linux/Nmap"},"Nmap")),(0,l.kt)("h2",{id:"tcp-dump"},(0,l.kt)("a",{parentName:"h2",href:"/note/Linux/tcpdump"},"TCP Dump")),(0,l.kt)("h2",{id:"ip"},"IP"),(0,l.kt)("p",null,"Reference: ",(0,l.kt)("inlineCode",{parentName:"p"},"ip help")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-4")),(0,l.kt)("td",{parentName:"tr",align:null},"IPv4")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-6")),(0,l.kt)("td",{parentName:"tr",align:null},"IPv6")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-c")),(0,l.kt)("td",{parentName:"tr",align:null},"Color output")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ip [<option>] { link | address | route | neigh | tunnel | tuntap | maddress | mroute | monitor | l2tp | ... } { <command> | help }\n")),(0,l.kt)("h3",{id:"interface"},"Interface"),(0,l.kt)("p",null,"Reference: ",(0,l.kt)("inlineCode",{parentName:"p"},"ip link help")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ip l [show [<dev>] [up]]\n")),(0,l.kt)("p",null,"Interface up / down"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ip l set [dev] <device> { up | down }\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Deprecated\nifconfig <interface> { up | down }\n")),(0,l.kt)("h3",{id:"ip-address"},"IP address"),(0,l.kt)("p",null,"Reference: ",(0,l.kt)("inlineCode",{parentName:"p"},"ip address help")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ip a [show [<device>] [up]]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Deprecated\nifconfig\n")),(0,l.kt)("p",null,"Add IP address"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ip a add <IP address>/<prefix length> dev <device>\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Deprecated\nifconfig <interface> add <IP address>/<prefix length>\n")),(0,l.kt)("p",null,"Delete IP address"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ip a del <IP address>/<prefix length> dev <device>\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Deprecated\nifconfig <interface> del <IP address>/<prefix length>\n")),(0,l.kt)("p",null,"Flush (Delete all) IP address"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ip a flush [dev <device>] [up]\n")),(0,l.kt)("h3",{id:"arp--neighbour"},"ARP / Neighbour"),(0,l.kt)("p",null,"Reference: ",(0,l.kt)("inlineCode",{parentName:"p"},"ip neighbour help")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ip n [show]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Deprecated\narp\n")),(0,l.kt)("p",null,"Clear ARP / NDP / neighbour"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ip n flush { all | dev <device> }\n")),(0,l.kt)("h3",{id:"route"},"Route"),(0,l.kt)("p",null,"Reference: ",(0,l.kt)("inlineCode",{parentName:"p"},"ip route help")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"No ",(0,l.kt)("inlineCode",{parentName:"td"},"match")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"root")),(0,l.kt)("td",{parentName:"tr",align:null},"Exact ",(0,l.kt)("inlineCode",{parentName:"td"},"<IP address>[/<prefix length>"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"match")),(0,l.kt)("td",{parentName:"tr",align:null},"Prefix not longer than ",(0,l.kt)("inlineCode",{parentName:"td"},"<prefix length>"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"root")),(0,l.kt)("td",{parentName:"tr",align:null},"Prefix not shorter than ",(0,l.kt)("inlineCode",{parentName:"td"},"<prefix length>"))))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ip r [list] [match|root] [<IP address>[/<prefix length>]]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Deprecated\nroute [-n]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Deprecated\nnetstat -[n]r\n")),(0,l.kt)("p",null,"Get route to destination address"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ip r get <IP address>\n")),(0,l.kt)("p",null,"Add route"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# default = 0/0 or ::/0\nip r add { default | <IP-address>/<prefix length> } [metric <metric>] [via <next hop IP address>] [dev <device>] [metric <metric>]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Deprecated\nroute add -net <IP address>/<prefix length> gw <next hop IP address> [dev <device>] [metric <metric>]\n")),(0,l.kt)("p",null,"Delete route"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# default = 0/0 or ::/0\nip r delete { default | <IP address>/<prefix length> } [via <next hop IP address>] [dev <device>]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Deprecated\nroute del default\nroute del -net <IP address>/<prefix length> [gw <next hop IP address>] [dev <device>] [metric <metric>]\n")),(0,l.kt)("h2",{id:"socket-statistics"},"Socket statistics"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ss [<option> ...] [state <state>] [<expression>]\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-n")),(0,l.kt)("td",{parentName:"tr",align:null},"Numeric")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-a")),(0,l.kt)("td",{parentName:"tr",align:null},"All listening and non-listening sockets")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-l")),(0,l.kt)("td",{parentName:"tr",align:null},"Listening sockets")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-p")),(0,l.kt)("td",{parentName:"tr",align:null},"Process")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-4")),(0,l.kt)("td",{parentName:"tr",align:null},"IPv4")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-6")),(0,l.kt)("td",{parentName:"tr",align:null},"IPv6")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-t")),(0,l.kt)("td",{parentName:"tr",align:null},"TCP")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-u")),(0,l.kt)("td",{parentName:"tr",align:null},"UDP")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"state <state>")),(0,l.kt)("td",{parentName:"tr",align:null},"State: ",(0,l.kt)("inlineCode",{parentName:"td"},"{ all \\| connected \\| synchronized }"),", TCP State: ",(0,l.kt)("inlineCode",{parentName:"td"},"{ established \\| syn-sent \\| syn-recv \\| fin-wait-1 \\| fin-wait-2 \\| time-wait \\| closed \\| close-wait \\| last-ack \\| listen \\| closing }"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"<expression>")),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Deprecated\nnetstat [<option>]\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-n")),(0,l.kt)("td",{parentName:"tr",align:null},"Numeric")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-a")),(0,l.kt)("td",{parentName:"tr",align:null},"All listening and non-listening sockets")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-l")),(0,l.kt)("td",{parentName:"tr",align:null},"Listening sockets")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-p")),(0,l.kt)("td",{parentName:"tr",align:null},"Program")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-4")),(0,l.kt)("td",{parentName:"tr",align:null},"IPv4")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-6")),(0,l.kt)("td",{parentName:"tr",align:null},"IPv6")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-t")),(0,l.kt)("td",{parentName:"tr",align:null},"TCP")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-u")),(0,l.kt)("td",{parentName:"tr",align:null},"UDP")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cat /proc/net/udp\ncat /proc/net/tcp\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"lsof [-n] -i [4|6][TCP|UDP][@<host>][:<port>]\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-n")),(0,l.kt)("td",{parentName:"tr",align:null},"Numeric")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"[4\\|6]")),(0,l.kt)("td",{parentName:"tr",align:null},"IPv4 / IPv6")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"<host>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Host")," / ",(0,l.kt)("inlineCode",{parentName:"td"},"IPv4")," / ",(0,l.kt)("inlineCode",{parentName:"td"},"[<IPv6>]"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"<port>")),(0,l.kt)("td",{parentName:"tr",align:null},"Port / ",(0,l.kt)("inlineCode",{parentName:"td"},"<port>-<port>"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-p [^]<PID>")),(0,l.kt)("td",{parentName:"tr",align:null},"Process ID, ",(0,l.kt)("inlineCode",{parentName:"td"},"^"),": Exclude")))),(0,l.kt)("h2",{id:"traffic-control"},"Traffic control"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://www.excentis.com/blog/use-linux-traffic-control-impairment-node-test-environment-part-2"},"Reference")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://man7.org/linux/man-pages/man8/tc-tbf.8.html"},"Manual")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"man tc-netem"))),(0,l.kt)("p",null,"Show ",(0,l.kt)("inlineCode",{parentName:"p"},"qdisc")," (queueing discipline)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"tc qdisc show dev <dev>\n")),(0,l.kt)("p",null,"Remove ",(0,l.kt)("inlineCode",{parentName:"p"},"qdisc")," (queueing discipline)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"tc qdisc add dev <dev> root\n")),(0,l.kt)("h3",{id:"netem-network-emulator"},"netem (Network Emulator)"),(0,l.kt)("p",null,"Latency"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"tc qdisc add dev <dev> root netem \\\n  delay <min latency>ms [<max latency>ms]\n")),(0,l.kt)("p",null,"Loss / Corrupt / Duplicate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"tc qdisc add dev <dev> root netem \\\n  { loss | corrupt | duplicate } <chance>%\n")),(0,l.kt)("h3",{id:"tbf-token-bucket-filter"},"TBF (Token Bucket Filter)"),(0,l.kt)("p",null,"Limit traffic rate / speed / bandwidth"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# min burst = rate / HZ(1000)\n# limit = queue size\n# latency = max amount of time in queue\n\ntc qdisc add dev <dev> root tbf \\\n  rate <rate>{k|m}bit \\\n  burst <burst>{k|m}bit \\\n  { limit <limit>{k|m}bit | latency <latency>ms }\n")),(0,l.kt)("h2",{id:"network-manager"},"Network manager"),(0,l.kt)("p",null,"< Ubuntu 18"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"apt show ifupdown\n\n# Config\n/etc/network/interfaces\n")),(0,l.kt)("p",null,"Ubuntu 18, 20"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"apt show netplan.io\n\n# Config\n/etc/netplan/\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("inlineCode",{parentName:"p"},"netplan")," use ",(0,l.kt)("inlineCode",{parentName:"p"},"systemd-networkd")," by default")),(0,l.kt)("p",null,"RHEL"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"yum info NetworkManager\n\nnmcli\n\nnmtui\n\n# Config\n/etc/sysconfig/network-scripts/\n")))}k.isMDXComponent=!0}}]);