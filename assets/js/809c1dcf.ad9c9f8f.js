(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[9352],{3905:function(t,e,n){"use strict";n.d(e,{Zo:function(){return m},kt:function(){return s}});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function p(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var d=a.createContext({}),o=function(t){var e=a.useContext(d),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},m=function(t){var e=o(t.components);return a.createElement(d.Provider,{value:e},t.children)},k={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,d=t.parentName,m=p(t,["components","mdxType","originalType","parentName"]),u=o(n),s=r,N=u["".concat(d,".").concat(s)]||u[s]||k[s]||l;return n?a.createElement(N,i(i({ref:e},m),{},{components:n})):a.createElement(N,i({ref:e},m))}));function s(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=u;var p={};for(var d in e)hasOwnProperty.call(e,d)&&(p[d]=e[d]);p.originalType=t,p.mdxType="string"==typeof t?t:r,i[1]=p;for(var o=2;o<l;o++)i[o]=n[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8831:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return p},contentTitle:function(){return d},metadata:function(){return o},toc:function(){return m},default:function(){return u}});var a=n(2122),r=n(9756),l=(n(7294),n(3905)),i=["components"],p={},d=void 0,o={unversionedId:"Linux/Network",id:"Linux/Network",isDocsHomePage:!1,title:"Network",description:"Firewall",source:"@site/docs/Linux/Network.md",sourceDirName:"Linux",slug:"/Linux/Network",permalink:"/note/Linux/Network",editUrl:"https://github.com/steelywing/note/edit/master/docs/Linux/Network.md",version:"current",frontMatter:{},sidebar:"linux",previous:{title:"LVM",permalink:"/note/Linux/LVM"},next:{title:"Performance",permalink:"/note/Linux/Performance"}},m=[{value:"Firewall",id:"firewall",children:[{value:"iptables",id:"iptables",children:[]},{value:"nftables",id:"nftables",children:[]}]},{value:"IP forward",id:"ip-forward",children:[]},{value:"Ping",id:"ping",children:[]},{value:"Nmap",id:"nmap",children:[{value:"Host",id:"host",children:[]},{value:"Host discovery",id:"host-discovery",children:[]},{value:"Scan",id:"scan",children:[]}]},{value:"TCP Dump",id:"tcp-dump",children:[]},{value:"IP",id:"ip",children:[{value:"Interface",id:"interface",children:[]},{value:"IP address",id:"ip-address",children:[]},{value:"ARP / Neighbour",id:"arp--neighbour",children:[]},{value:"Route",id:"route",children:[]}]},{value:"Socket statistics",id:"socket-statistics",children:[]},{value:"Traffic control",id:"traffic-control",children:[{value:"netem (Network Emulator)",id:"netem-network-emulator",children:[]},{value:"TBF (Token Bucket Filter)",id:"tbf-token-bucket-filter",children:[]}]},{value:"Network manager",id:"network-manager",children:[]}],k={toc:m};function u(t){var e=t.components,n=(0,r.Z)(t,i);return(0,l.kt)("wrapper",(0,a.Z)({},k,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"firewall"},"Firewall"),(0,l.kt)("h3",{id:"iptables"},(0,l.kt)("a",{parentName:"h3",href:"/note/Linux/iptables"},"iptables")),(0,l.kt)("h3",{id:"nftables"},"nftables"),(0,l.kt)("h2",{id:"ip-forward"},"IP forward"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/4/html/Security_Guide/s1-firewall-ipt-fwd.html"},"Reference")),(0,l.kt)("p",null,"Get IP forward setting"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sysctl net.ipv4.ip_forward\n")),(0,l.kt)("p",null,"Set IP forward setting (",(0,l.kt)("inlineCode",{parentName:"p"},"0")," = Disable, ",(0,l.kt)("inlineCode",{parentName:"p"},"1")," = Enable)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sysctl -w net.ipv4.ip_forward={0|1}\n")),(0,l.kt)("p",null,"Set IP forward on boot"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"/etc/sysctl.conf")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"net.ipv4.ip_forward = {0|1}\n")),(0,l.kt)("h2",{id:"ping"},"Ping"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'# Display timeout\nping -O <IP address>\n \n# Display time\nping <IP address> | while read log; do\n  echo "$(date): $log";\ndone\n')),(0,l.kt)("h2",{id:"nmap"},"Nmap"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://nmap.org/book/man.html"},"Reference")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"nmap <option>\n")),(0,l.kt)("h3",{id:"host"},"Host"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-oG")),(0,l.kt)("td",{parentName:"tr",align:null},"Grepable Output")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"<host>[/prefix]")),(0,l.kt)("td",{parentName:"tr",align:null},"Host or CIDR")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"10.0.0-255.0-255")),(0,l.kt)("td",{parentName:"tr",align:null},"Range")))),(0,l.kt)("h3",{id:"host-discovery"},"Host discovery"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-Pn")),(0,l.kt)("td",{parentName:"tr",align:null},"No ping (Skip host discovery)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-PS<port list>")),(0,l.kt)("td",{parentName:"tr",align:null},"TCP SYN ping")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-PA<port list>")),(0,l.kt)("td",{parentName:"tr",align:null},"TCP ACK ping")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-PU<port list>")),(0,l.kt)("td",{parentName:"tr",align:null},"UDP ping")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-PE")),(0,l.kt)("td",{parentName:"tr",align:null},"ICMP ping")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-PR")),(0,l.kt)("td",{parentName:"tr",align:null},"ARP ping",(0,l.kt)("br",null),"Default: use on local ethernet")))),(0,l.kt)("h3",{id:"scan"},"Scan"),(0,l.kt)("p",null,"Default: scan most common 1,000 ports"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-p <port list>")),(0,l.kt)("td",{parentName:"tr",align:null},"Port scan",(0,l.kt)("br",null),(0,l.kt)("br",null),"Ex:",(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"-p 1-1000"),(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"-p U:1-10,20,T:100-200,S:300"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-F")),(0,l.kt)("td",{parentName:"tr",align:null},"Scan most common 100 ports")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--top-ports <n>")),(0,l.kt)("td",{parentName:"tr",align:null},"Scan ",(0,l.kt)("inlineCode",{parentName:"td"},"<n>")," most common ports")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-sn")),(0,l.kt)("td",{parentName:"tr",align:null},"Disable port scan")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-sS")),(0,l.kt)("td",{parentName:"tr",align:null},"TCP SYN scan (Default)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-sT")),(0,l.kt)("td",{parentName:"tr",align:null},"TCP connect scan")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-sU")),(0,l.kt)("td",{parentName:"tr",align:null},"UDP scan")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-T<0-5>")),(0,l.kt)("td",{parentName:"tr",align:null},"Timing template",(0,l.kt)("br",null),(0,l.kt)("br",null),"paranoid (0), sneaky (1), polite (2), normal (3), aggressive (4), and insane (5)")))),(0,l.kt)("h2",{id:"tcp-dump"},"TCP Dump"),(0,l.kt)("p",null,"List interface"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"tcpdump { -D | --list-interfaces }\n")),(0,l.kt)("p",null,"Dump traffic"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-i {<interface>\\|any}")),(0,l.kt)("td",{parentName:"tr",align:null},"Listen on interface",(0,l.kt)("br",null),"Default: lowest numbered of interface list")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-n")),(0,l.kt)("td",{parentName:"tr",align:null},"Not resolve hostname")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-nn")),(0,l.kt)("td",{parentName:"tr",align:null},"Not resolve hostname or port")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-v")),(0,l.kt)("td",{parentName:"tr",align:null},"Verbose")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-w <file.pcap>")),(0,l.kt)("td",{parentName:"tr",align:null},"Write to file")))),(0,l.kt)("p",null,"Expression"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.tcpdump.org/manpages/pcap-filter.7.html"},"Reference")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Expression"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"[src\\|dst] {host\\|ip} [not] <host>")),(0,l.kt)("td",{parentName:"tr",align:null},"Match ",(0,l.kt)("inlineCode",{parentName:"td"},"<host>"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"{host\\|ip} <host> and <host>")),(0,l.kt)("td",{parentName:"tr",align:null},"Match traffic between ",(0,l.kt)("inlineCode",{parentName:"td"},"<host>")," and ",(0,l.kt)("inlineCode",{parentName:"td"},"<host>"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"[src\\|dst] net <IP address>[/<prefix length>]")),(0,l.kt)("td",{parentName:"tr",align:null},"Match IP")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"<IP address>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"<#>[.<#>[.<#>[.<#>]]]"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"[src\\|dst] port <port>")),(0,l.kt)("td",{parentName:"tr",align:null},"Port")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"[src\\|dst] portrange <port>-<port>")),(0,l.kt)("td",{parentName:"tr",align:null},"Port range")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"{tcp\\|udp\\|icmp}")),(0,l.kt)("td",{parentName:"tr",align:null},"TCP / UDP / ICMP")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"vlan [VLAN ID]")),(0,l.kt)("td",{parentName:"tr",align:null},"VLAN",(0,l.kt)("br",null),"Default: all IEEE 802.1Q packet")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"{not\\|!} <expression>")),(0,l.kt)("td",{parentName:"tr",align:null},"not")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"<expression> { and \\| && } <expression>")),(0,l.kt)("td",{parentName:"tr",align:null},"and")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"<expression> { or \\| \\|\\| } <expression>")),(0,l.kt)("td",{parentName:"tr",align:null},"or")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"tcpdump [<option>] [<expression>]\n")),(0,l.kt)("h2",{id:"ip"},"IP"),(0,l.kt)("p",null,"Reference: ",(0,l.kt)("inlineCode",{parentName:"p"},"ip help")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-4")),(0,l.kt)("td",{parentName:"tr",align:null},"IPv4")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-6")),(0,l.kt)("td",{parentName:"tr",align:null},"IPv6")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-c")),(0,l.kt)("td",{parentName:"tr",align:null},"Color output")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ip [<option>] { link | address | route | neigh | tunnel | tuntap | maddress | mroute | monitor | l2tp | ... } { <command> | help }\n")),(0,l.kt)("h3",{id:"interface"},"Interface"),(0,l.kt)("p",null,"Reference: ",(0,l.kt)("inlineCode",{parentName:"p"},"ip link help")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ip l [show [<dev>] [up]]\n")),(0,l.kt)("p",null,"Interface up / down"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ip l set [dev] <device> { up | down }\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Deprecated\nifconfig <interface> { up | down }\n")),(0,l.kt)("h3",{id:"ip-address"},"IP address"),(0,l.kt)("p",null,"Reference: ",(0,l.kt)("inlineCode",{parentName:"p"},"ip address help")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ip a [show [<device>] [up]]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Deprecated\nifconfig\n")),(0,l.kt)("p",null,"Add IP address"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ip a add <IP address>/<prefix length> dev <device>\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Deprecated\nifconfig <interface> add <IP address>/<prefix length>\n")),(0,l.kt)("p",null,"Delete IP address"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ip a del <IP address>/<prefix length> dev <device>\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Deprecated\nifconfig <interface> del <IP address>/<prefix length>\n")),(0,l.kt)("p",null,"Flush (Delete all) IP address"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ip a flush [dev <device>] [up]\n")),(0,l.kt)("h3",{id:"arp--neighbour"},"ARP / Neighbour"),(0,l.kt)("p",null,"Reference: ",(0,l.kt)("inlineCode",{parentName:"p"},"ip neighbour help")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ip n [show]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Deprecated\narp\n")),(0,l.kt)("p",null,"Clear ARP / NDP / neighbour"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ip n flush { all | dev <device> }\n")),(0,l.kt)("h3",{id:"route"},"Route"),(0,l.kt)("p",null,"Reference: ",(0,l.kt)("inlineCode",{parentName:"p"},"ip route help")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"No ",(0,l.kt)("inlineCode",{parentName:"td"},"match")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"root")),(0,l.kt)("td",{parentName:"tr",align:null},"Exact ",(0,l.kt)("inlineCode",{parentName:"td"},"<IP address>[/<prefix length>"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"match")),(0,l.kt)("td",{parentName:"tr",align:null},"Prefix not longer than ",(0,l.kt)("inlineCode",{parentName:"td"},"<prefix length>"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"root")),(0,l.kt)("td",{parentName:"tr",align:null},"Prefix not shorter than ",(0,l.kt)("inlineCode",{parentName:"td"},"<prefix length>"))))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ip r [list] [match|root] [<IP address>[/<prefix length>]]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Deprecated\nroute [-n]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Deprecated\nnetstat -[n]r\n")),(0,l.kt)("p",null,"Get route to destination address"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ip r get <IP address>\n")),(0,l.kt)("p",null,"Add route"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# default = 0/0 or ::/0\nip r add { default | <IP-address>/<prefix length> } [metric <metric>] [via <next hop IP address>] [dev <device>] [metric <metric>]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Deprecated\nroute add -net <IP address>/<prefix length> gw <next hop IP address> [dev <device>] [metric <metric>]\n")),(0,l.kt)("p",null,"Delete route"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# default = 0/0 or ::/0\nip r delete { default | <IP address>/<prefix length> } [via <next hop IP address>] [dev <device>]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Deprecated\nroute del default\nroute del -net <IP address>/<prefix length> [gw <next hop IP address>] [dev <device>] [metric <metric>]\n")),(0,l.kt)("h2",{id:"socket-statistics"},"Socket statistics"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ss [<option> ...] [state <state>] [<expression>]\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-n")),(0,l.kt)("td",{parentName:"tr",align:null},"Numeric")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-a")),(0,l.kt)("td",{parentName:"tr",align:null},"All listening and non-listening sockets")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-l")),(0,l.kt)("td",{parentName:"tr",align:null},"Listening sockets")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-p")),(0,l.kt)("td",{parentName:"tr",align:null},"Process")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-4")),(0,l.kt)("td",{parentName:"tr",align:null},"IPv4")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-6")),(0,l.kt)("td",{parentName:"tr",align:null},"IPv6")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-t")),(0,l.kt)("td",{parentName:"tr",align:null},"TCP")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-u")),(0,l.kt)("td",{parentName:"tr",align:null},"UDP")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"state <state>")),(0,l.kt)("td",{parentName:"tr",align:null},"State: ",(0,l.kt)("inlineCode",{parentName:"td"},"{ all \\| connected \\| synchronized }"),", TCP State: ",(0,l.kt)("inlineCode",{parentName:"td"},"{ established \\| syn-sent \\| syn-recv \\| fin-wait-1 \\| fin-wait-2 \\| time-wait \\| closed \\| close-wait \\| last-ack \\| listen \\| closing }"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"<expression>")),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Deprecated\nnetstat [<option>]\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-n")),(0,l.kt)("td",{parentName:"tr",align:null},"Numeric")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-a")),(0,l.kt)("td",{parentName:"tr",align:null},"All listening and non-listening sockets")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-l")),(0,l.kt)("td",{parentName:"tr",align:null},"Listening sockets")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-p")),(0,l.kt)("td",{parentName:"tr",align:null},"Program")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-4")),(0,l.kt)("td",{parentName:"tr",align:null},"IPv4")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-6")),(0,l.kt)("td",{parentName:"tr",align:null},"IPv6")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-t")),(0,l.kt)("td",{parentName:"tr",align:null},"TCP")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-u")),(0,l.kt)("td",{parentName:"tr",align:null},"UDP")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cat /proc/net/udp\ncat /proc/net/tcp\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"lsof [-n] -i [4|6][TCP|UDP][@<host>][:<port>]\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-n")),(0,l.kt)("td",{parentName:"tr",align:null},"Numeric")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"[4\\|6]")),(0,l.kt)("td",{parentName:"tr",align:null},"IPv4 / IPv6")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"<host>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Host")," / ",(0,l.kt)("inlineCode",{parentName:"td"},"IPv4")," / ",(0,l.kt)("inlineCode",{parentName:"td"},"[<IPv6>]"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"<port>")),(0,l.kt)("td",{parentName:"tr",align:null},"Port / ",(0,l.kt)("inlineCode",{parentName:"td"},"<port>-<port>"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-p [^]<PID>")),(0,l.kt)("td",{parentName:"tr",align:null},"Process ID, ",(0,l.kt)("inlineCode",{parentName:"td"},"^"),": Exclude")))),(0,l.kt)("h2",{id:"traffic-control"},"Traffic control"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://www.excentis.com/blog/use-linux-traffic-control-impairment-node-test-environment-part-2"},"Reference")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://man7.org/linux/man-pages/man8/tc-tbf.8.html"},"Manual")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"man tc-netem"))),(0,l.kt)("p",null,"Show ",(0,l.kt)("inlineCode",{parentName:"p"},"qdisc")," (queueing discipline)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"tc qdisc show dev <dev>\n")),(0,l.kt)("p",null,"Remove ",(0,l.kt)("inlineCode",{parentName:"p"},"qdisc")," (queueing discipline)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"tc qdisc add dev <dev> root\n")),(0,l.kt)("h3",{id:"netem-network-emulator"},"netem (Network Emulator)"),(0,l.kt)("p",null,"Latency"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"tc qdisc add dev <dev> root netem \\\n  delay <min latency>ms [<max latency>ms]\n")),(0,l.kt)("p",null,"Loss / Corrupt / Duplicate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"tc qdisc add dev <dev> root netem \\\n  { loss | corrupt | duplicate } <chance>%\n")),(0,l.kt)("h3",{id:"tbf-token-bucket-filter"},"TBF (Token Bucket Filter)"),(0,l.kt)("p",null,"Limit traffic rate / speed / bandwidth"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# min burst = rate / HZ(1000)\n# limit = queue size\n# latency = max amount of time in queue\n\ntc qdisc add dev <dev> root tbf \\\n  rate <rate>{k|m}bit \\\n  burst <burst>{k|m}bit \\\n  { limit <limit>{k|m}bit | latency <latency>ms }\n")),(0,l.kt)("h2",{id:"network-manager"},"Network manager"),(0,l.kt)("p",null,"< Ubuntu 18"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"apt show ifupdown\n\n# Config\n/etc/network/interfaces\n")),(0,l.kt)("p",null,"Ubuntu 18, 20"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"apt show netplan.io\n\n# Config\n/etc/netplan/\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("inlineCode",{parentName:"p"},"netplan")," use ",(0,l.kt)("inlineCode",{parentName:"p"},"systemd-networkd")," by default")),(0,l.kt)("p",null,"RHEL"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"yum info NetworkManager\n\nnmcli\n\nnmtui\n\n# Config\n/etc/sysconfig/network-scripts/\n")))}u.isMDXComponent=!0}}]);