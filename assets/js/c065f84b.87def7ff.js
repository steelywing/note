"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[1341],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>y});var l=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,l)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,l,n=function(e,t){if(null==e)return{};var r,l,n={},a=Object.keys(e);for(l=0;l<a.length;l++)r=a[l],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)r=a[l],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=l.createContext({}),p=function(e){var t=l.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return l.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},d=l.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=p(r),y=n,v=d["".concat(s,".").concat(y)]||d[y]||c[y]||a;return r?l.createElement(v,i(i({ref:t},u),{},{components:r})):l.createElement(v,i({ref:t},u))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var p=2;p<a;p++)i[p]=r[p];return l.createElement.apply(null,i)}return l.createElement.apply(null,r)}d.displayName="MDXCreateElement"},683:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var l=r(7462),n=(r(7294),r(3905));const a={sidebar_label:"Registry"},i="Registry - PowerShell",o={unversionedId:"Windows/PowerShell/Registry",id:"Windows/PowerShell/Registry",title:"Registry - PowerShell",description:"List available registry drive",source:"@site/docs/Windows/PowerShell/Registry.md",sourceDirName:"Windows/PowerShell",slug:"/Windows/PowerShell/Registry",permalink:"/note/Windows/PowerShell/Registry",draft:!1,editUrl:"https://github.com/steelywing/note/edit/master/docs/Windows/PowerShell/Registry.md",tags:[],version:"current",frontMatter:{sidebar_label:"Registry"},sidebar:"windows",previous:{title:"Network",permalink:"/note/Windows/PowerShell/Network"},next:{title:"String",permalink:"/note/Windows/PowerShell/String"}},s={},p=[{value:"List available registry drive",id:"list-available-registry-drive",level:2},{value:"Key",id:"key",level:2},{value:"List keys",id:"list-keys",level:3},{value:"Create key",id:"create-key",level:3},{value:"Delete key",id:"delete-key",level:3},{value:"Value",id:"value",level:2},{value:"Get values",id:"get-values",level:3},{value:"Set value",id:"set-value",level:3},{value:"Remove value",id:"remove-value",level:3}],u={toc:p};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,l.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"registry---powershell"},"Registry - PowerShell"),(0,n.kt)("h2",{id:"list-available-registry-drive"},"List available registry drive"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"Get-PSDrive -PSProvider Registry\n\ncd HKCU:\ncd HKLM:\n")),(0,n.kt)("p",null,"Using Registry provider"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"ls Registry::\n\ncd Registry:: # Tab / Ctrl + Space\n")),(0,n.kt)("h2",{id:"key"},"Key"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/powershell/scripting/samples/working-with-registry-keys?view=powershell-7"},"Reference"))),(0,n.kt)("h3",{id:"list-keys"},"List keys"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"ls [<key path>]\n")),(0,n.kt)("h3",{id:"create-key"},"Create key"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"ni <key path>\n")),(0,n.kt)("h3",{id:"delete-key"},"Delete key"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"ri <key path>\n")),(0,n.kt)("h2",{id:"value"},"Value"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/powershell/scripting/samples/working-with-registry-entries?view=powershell-7"},"Reference"))),(0,n.kt)("h3",{id:"get-values"},"Get values"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"gp <key path> [-Name <name>]\n")),(0,n.kt)("h3",{id:"set-value"},"Set value"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"sp <key path>\n  -Name <name>\n  -Value <value>\n  [-Type { Binary | DWord | QWord | ExpandString | MultiString | String }]\n")),(0,n.kt)("h3",{id:"remove-value"},"Remove value"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"rp <key path> -Name <name>\n")))}c.isMDXComponent=!0}}]);