(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[7576],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return d},kt:function(){return k}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),u=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=u(e.components);return a.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),c=u(n),k=r,N=c["".concat(o,".").concat(k)]||c[k]||m[k]||l;return n?a.createElement(N,i(i({ref:t},d),{},{components:n})):a.createElement(N,i({ref:t},d))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=c;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var u=2;u<l;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4241:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return o},metadata:function(){return u},toc:function(){return d},default:function(){return c}});var a=n(2122),r=n(9756),l=(n(7294),n(3905)),i=["components"],p={},o="awk",u={unversionedId:"Linux/awk",id:"Linux/awk",isDocsHomePage:!1,title:"awk",description:"Reference",source:"@site/docs/Linux/awk.md",sourceDirName:"Linux",slug:"/Linux/awk",permalink:"/note/Linux/awk",editUrl:"https://github.com/steelywing/note/edit/master/docs/Linux/awk.md",version:"current",frontMatter:{},sidebar:"linux",previous:{title:"Zentyal",permalink:"/note/Linux/Zentyal"},next:{title:"iptables",permalink:"/note/Linux/iptables"}},d=[{value:"<code>&lt;program&gt;</code>",id:"program",children:[]},{value:"Built-in Variable",id:"built-in-variable",children:[]},{value:"RegExp",id:"regexp",children:[{value:"Match",id:"match",children:[]},{value:"Not match",id:"not-match",children:[]}]},{value:"Print",id:"print",children:[]}],m={toc:d};function c(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"awk"},"awk"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.gnu.org/software/gawk/manual/gawk.html"},"Reference")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"awk '<program>' [<input file> [<input file>]]\nawk -f '<program file>' [<input file> [<input file>]]\n")),(0,l.kt)("h2",{id:"program"},(0,l.kt)("inlineCode",{parentName:"h2"},"<program>")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-awk"},"# A BEGIN rule is executed once only, before the first input record is read.\nBEGIN {\n    # <action>\n}\n\n# If the pattern is omitted, then the action is performed for every record.\n<pattern> {\n    # <action>\n}\n\n# An END rule is executed once only, after all the input is read. \nEND {\n    # <action>\n}\n")),(0,l.kt)("p",null,"Default ",(0,l.kt)("inlineCode",{parentName:"p"},"<action>")," is ",(0,l.kt)("inlineCode",{parentName:"p"},"print")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-awk"},"<pattern> {\n    print\n}\n\n# equal to\n\n<pattern>\n")),(0,l.kt)("h2",{id:"built-in-variable"},"Built-in Variable"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ARGC")),(0,l.kt)("td",{parentName:"tr",align:null},"Argument Count"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ARGV")),(0,l.kt)("td",{parentName:"tr",align:null},"Argument Value"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"$0")),(0,l.kt)("td",{parentName:"tr",align:null},"Current Record"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"$1"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"$2"),", ..., ",(0,l.kt)("inlineCode",{parentName:"td"},"$NF")),(0,l.kt)("td",{parentName:"tr",align:null},"Field 1, Field 2, ..., Last Field"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"NF")),(0,l.kt)("td",{parentName:"tr",align:null},"Number of Fields"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"NR")),(0,l.kt)("td",{parentName:"tr",align:null},"Number of Records has processed"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"FS")),(0,l.kt)("td",{parentName:"tr",align:null},"Field Separator"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'" "'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"OFS")),(0,l.kt)("td",{parentName:"tr",align:null},"Output Field Separator"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'" "'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"IGNORECASE")),(0,l.kt)("td",{parentName:"tr",align:null},"Ignore Case"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"RS")),(0,l.kt)("td",{parentName:"tr",align:null},"Record Separator"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"\\n"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ORS")),(0,l.kt)("td",{parentName:"tr",align:null},"Output Record Separator"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"\\n"'))))),(0,l.kt)("h2",{id:"regexp"},"RegExp"),(0,l.kt)("h3",{id:"match"},"Match"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-awk"},"<string> ~ /<regexp>/\n")),(0,l.kt)("h3",{id:"not-match"},"Not match"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-awk"},"<string> !~ /<regexp>/\n")),(0,l.kt)("p",null,"Default ",(0,l.kt)("inlineCode",{parentName:"p"},"<string>")," is ",(0,l.kt)("inlineCode",{parentName:"p"},"$0")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-awk"},"/<regexp>/\n\n# equal to\n\n$0 ~ /<regexp>/\n")),(0,l.kt)("h2",{id:"print"},"Print"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-awk"},"{\n    print <item>, ...\n}\n")),(0,l.kt)("p",null,"Default ",(0,l.kt)("inlineCode",{parentName:"p"},"<item>")," is ",(0,l.kt)("inlineCode",{parentName:"p"},"$0")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-awk"},"{\n    print $0\n\n    # equal to\n\n    print\n}\n")))}c.isMDXComponent=!0}}]);