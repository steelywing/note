(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[3814],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=i,f=m["".concat(u,".").concat(d)]||m[d]||s[d]||a;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2660:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return c},default:function(){return m}});var r=n(2122),i=n(9756),a=(n(7294),n(3905)),o=["components"],l={},u="Partition",p={unversionedId:"Linux/Partition",id:"Linux/Partition",isDocsHomePage:!1,title:"Partition",description:"Partition table / Disk label",source:"@site/docs/Linux/Partition.md",sourceDirName:"Linux",slug:"/Linux/Partition",permalink:"/note/Linux/Partition",editUrl:"https://github.com/steelywing/note/edit/master/docs/Linux/Partition.md",version:"current",frontMatter:{},sidebar:"linux",previous:{title:"Package management",permalink:"/note/Linux/Package management"},next:{title:"Performance",permalink:"/note/Linux/Performance"}},c=[{value:"Partition table / Disk label",id:"partition-table--disk-label",children:[]},{value:"Reload partition table",id:"reload-partition-table",children:[]},{value:"Partition command",id:"partition-command",children:[]}],s={toc:c};function m(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"partition"},"Partition"),(0,a.kt)("h2",{id:"partition-table--disk-label"},"Partition table / Disk label"),(0,a.kt)("p",null,"MBR (Master Boot Record) / DOS"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Max size 2 TiB (2\xb3\xb2 sectors \xd7 2\u2079 bytes per sector)"),(0,a.kt)("li",{parentName:"ul"},"Max 4 primary partition")),(0,a.kt)("p",null,"GPT (GUID Partition Table)"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Max size 8 ZiB (2\u2076\u2074 sectors \xd7 2\u2079 bytes per sector)"),(0,a.kt)("li",{parentName:"ul"},"Unlimited partition (Windows support 128 partitions)")),(0,a.kt)("h2",{id:"reload-partition-table"},"Reload partition table"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"partprobe /dev/<device>\n")),(0,a.kt)("h2",{id:"partition-command"},"Partition command"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"fdisk")," (",(0,a.kt)("a",{parentName:"li",href:"https://wiki.archlinux.org/index.php/Fdisk"},"Reference"),")",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Common"),(0,a.kt)("li",{parentName:"ul"},"Not support GPT before ",(0,a.kt)("inlineCode",{parentName:"li"},"util-linux")," 2.23"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"parted"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Support GPT"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"gdisk")," (GPT fdisk)",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Support GPT")))))}m.isMDXComponent=!0}}]);