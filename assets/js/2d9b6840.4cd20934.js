(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[7560],{3905:function(e,n,r){"use strict";r.d(n,{Zo:function(){return p},kt:function(){return d}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=t.createContext({}),s=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},p=function(e){var n=s(e.components);return t.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=s(r),d=o,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||a;return r?t.createElement(f,i(i({ref:n},p),{},{components:r})):t.createElement(f,i({ref:n},p))}));function d(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=r[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1382:function(e,n,r){"use strict";r.r(n),r.d(n,{frontMatter:function(){return c},metadata:function(){return l},toc:function(){return s},default:function(){return u}});var t=r(2122),o=r(9756),a=(r(7294),r(3905)),i=["components"],c={},l={unversionedId:"JavaScript/Module",id:"JavaScript/Module",isDocsHomePage:!1,title:"Module",description:"IIFE (Immediately Invoked Function Expression) - Browser",source:"@site/docs/JavaScript/Module.md",sourceDirName:"JavaScript",slug:"/JavaScript/Module",permalink:"/note/JavaScript/Module",editUrl:"https://github.com/steelywing/note/edit/master/docs/JavaScript/Module.md",version:"current",frontMatter:{},sidebar:"noteSidebar",previous:{title:"BrowserAutomation",permalink:"/note/JavaScript/BrowserAutomation"},next:{title:"README",permalink:"/note/JavaScript/README"}},s=[{value:"IIFE (Immediately Invoked Function Expression) - Browser",id:"iife-immediately-invoked-function-expression---browser",children:[]},{value:"AMD (Asynchronous Module Definition) - RequireJS",id:"amd-asynchronous-module-definition---requirejs",children:[]},{value:"CommonJS - Node.js",id:"commonjs---nodejs",children:[]},{value:"UMD (Universal Module Definition) - Node.js, Browser",id:"umd-universal-module-definition---nodejs-browser",children:[]},{value:"ESM (ECMAScript Module) - Node.js, Browser",id:"esm-ecmascript-module---nodejs-browser",children:[]}],p={toc:s};function u(e){var n=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"iife-immediately-invoked-function-expression---browser"},"IIFE (Immediately Invoked Function Expression) - Browser"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/zh-TW/docs/Glossary/IIFE"},"Reference"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// circle.js\n\nvar circle = (function () {\n    const { PI } = Math;\n    return {\n        pi: PI;\n        area: (r) => PI * (r ** 2);\n    };\n})();\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<script src="circle.js"><\/script>\n<script>\nconsole.log(circle.pi);\n<\/script>\n')),(0,a.kt)("h2",{id:"amd-asynchronous-module-definition---requirejs"},"AMD (Asynchronous Module Definition) - RequireJS"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"uncommon")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("a",{parentName:"p",href:"https://requirejs.org/docs/api.html"},"Reference"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// circle.js\n\ndefine('circle',\n    [ /* Dependency */ ],\n    function( /* Dependency */ ) {\n        const { PI } = Math;\n        return {\n            pi: PI,\n            area: (r) => PI * (r ** 2),\n        };\n    }\n);\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"requirejs(['circle'], function(circle) {\n    console.log(circle.pi);\n});\n")),(0,a.kt)("h2",{id:"commonjs---nodejs"},"CommonJS - Node.js"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("a",{parentName:"p",href:"http://wiki.commonjs.org/wiki/Modules/1.1.1"},"Reference"))),(0,a.kt)("p",null,"File extension: ",(0,a.kt)("inlineCode",{parentName:"p"},".cjs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// circle.js\n\nconst { PI } = Math;\n\nexports.pi = PI;\nexports.area = (r) => PI * (r ** 2);\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const circle = require('./circle.js');\nconsole.log(circle.pi);\n")),(0,a.kt)("h2",{id:"umd-universal-module-definition---nodejs-browser"},"UMD (Universal Module Definition) - Node.js, Browser"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/umdjs/umd"},"Reference"))),(0,a.kt)("p",null,"Uses AMD as a base, with special-casing added to handle CommonJS compatibility."),(0,a.kt)("h2",{id:"esm-ecmascript-module---nodejs-browser"},"ESM (ECMAScript Module) - Node.js, Browser"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Reference: ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import"},(0,a.kt)("inlineCode",{parentName:"a"},"import")),", ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/export"},(0,a.kt)("inlineCode",{parentName:"a"},"export")))),(0,a.kt)("p",null,"File extension: ",(0,a.kt)("inlineCode",{parentName:"p"},".mjs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// circle.mjs\n\nconst { PI } = Math;\n\nexport const pi = PI;\nexport function area(r) {\n    return PI * (r ** 2);\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import * as circle from "./circle";\nconsole.log(circle.pi);\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { pi, area } from "./circle";\nconsole.log(pi);\n')))}u.isMDXComponent=!0}}]);