"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[1983],{87485:(e,a,n)=>{n.d(a,{Zo:()=>c,kt:()=>p});var t=n(76687);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function l(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?l(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function o(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=t.createContext({}),m=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},c=function(e){var a=m(e.components);return t.createElement(s.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},d=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=m(n),p=r,k=d["".concat(s,".").concat(p)]||d[p]||u[p]||l;return n?t.createElement(k,i(i({ref:a},c),{},{components:n})):t.createElement(k,i({ref:a},c))}));function p(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var s in a)hasOwnProperty.call(a,s)&&(o[s]=a[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var m=2;m<l;m++)i[m]=n[m];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},67031:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>m});var t=n(76274),r=(n(76687),n(87485));const l={},i="Samba",o={unversionedId:"Linux/Samba",id:"Linux/Samba",title:"Samba",description:"Samba / SMB / Server Message Block",source:"@site/docs/Linux/Samba.md",sourceDirName:"Linux",slug:"/Linux/Samba",permalink:"/note/Linux/Samba",draft:!1,editUrl:"https://github.com/steelywing/note/edit/master/docs/Linux/Samba.md",tags:[],version:"current",frontMatter:{},sidebar:"linux",previous:{title:"SSH",permalink:"/note/Linux/SSH"},next:{title:"Service / Daemon",permalink:"/note/Linux/Service"}},s={},m=[{value:"<code>realm</code> CLI",id:"realm-cli",level:2},{value:"List <code>realm</code> command",id:"list-realm-command",level:3},{value:"Discover realm",id:"discover-realm",level:3},{value:"Join realm",id:"join-realm",level:3},{value:"List realm",id:"list-realm",level:3},{value:"Leave realm",id:"leave-realm",level:3},{value:"Clear samba <code>idmap</code> cache",id:"clear-samba-idmap-cache",level:2},{value:"Kerberos",id:"kerberos",level:2},{value:"Test and dump Samba config",id:"test-and-dump-samba-config",level:2},{value:"Reload config",id:"reload-config",level:2},{value:"Check domain / WinBind user",id:"check-domain--winbind-user",level:2},{value:"List WinBind users",id:"list-winbind-users",level:2},{value:"Enable Extended ACL Support",id:"enable-extended-acl-support",level:2},{value:"Audit",id:"audit",level:2},{value:"Samba member server (ADS) config",id:"samba-member-server-ads-config",level:2}],c={toc:m};function u(e){let{components:a,...n}=e;return(0,r.kt)("wrapper",(0,t.Z)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"samba"},"Samba"),(0,r.kt)("p",null,"Samba / SMB / Server Message Block"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"File Server"),(0,r.kt)("li",{parentName:"ul"},"Member Server"),(0,r.kt)("li",{parentName:"ul"},"Active Directory Domain Controller"),(0,r.kt)("li",{parentName:"ul"},"Support ",(0,r.kt)("inlineCode",{parentName:"li"},"idmap"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"WinBind",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"More compatible"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://sssd.io/"},"SSSD")," (",(0,r.kt)("a",{parentName:"li",href:"https://access.redhat.com/articles/4355391"},"Not fully support"),")",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"SSSD mainly for Linux joining AD, use AD account to login Linux"),(0,r.kt)("li",{parentName:"ul"},"Newer than WinBind"),(0,r.kt)("li",{parentName:"ul"},"More secure")))))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ID / UID"),(0,r.kt)("td",{parentName:"tr",align:null},"Linux ID of user")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SID"),(0,r.kt)("td",{parentName:"tr",align:null},"Windows ID of user")))),(0,r.kt)("h2",{id:"realm-cli"},(0,r.kt)("inlineCode",{parentName:"h2"},"realm")," CLI"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Ref: ",(0,r.kt)("a",{parentName:"p",href:"https://ubuntu.com/server/docs/samba-active-directory"},"Member server in an Active Directory domain"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Discover / Join / Leave / List realm (domain)"),(0,r.kt)("li",{parentName:"ul"},"Use to auto setup SSSD / SMB / Kerberos config"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"realm")," use kerberos credential cache")),(0,r.kt)("h3",{id:"list-realm-command"},"List ",(0,r.kt)("inlineCode",{parentName:"h3"},"realm")," command"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"realm\n")),(0,r.kt)("h3",{id:"discover-realm"},"Discover realm"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# realm discover [-v] [<realm>]\nrealm discover -v\n")),(0,r.kt)("h3",{id:"join-realm"},"Join realm"),(0,r.kt)("p",null,"Join with default software (SSSD)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# realm join [-v] [-U <user>] <realm>\nrealm join -v -U Administrator example.com\n")),(0,r.kt)("p",null,"Join with Samba and WinBind"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If join successful, ",(0,r.kt)("inlineCode",{parentName:"li"},"realm")," will update ",(0,r.kt)("inlineCode",{parentName:"li"},"/etc/samba/smb.conf"),", and other config")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"realm join -v --membership-software=samba --client-software=winbind example.com\n")),(0,r.kt)("p",null,"If join failed, try clear kerberos tickets"),(0,r.kt)("h3",{id:"list-realm"},"List realm"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"realm list\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"example.com\n  type: kerberos\n  realm-name: EXAMPLE.COM\n  domain-name: example.com\n  configured: kerberos-member\n  server-software: active-directory\n  client-software: winbind\n  required-package: libnss-winbind\n  required-package: winbind\n  required-package: libpam-winbind\n  required-package: samba-common-bin\n  login-formats: %U\n  login-policy: allow-any-login\n")),(0,r.kt)("h3",{id:"leave-realm"},"Leave realm"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# realm leave [-v] [<realm>]\nrealm leave\n")),(0,r.kt)("h2",{id:"clear-samba-idmap-cache"},"Clear samba ",(0,r.kt)("inlineCode",{parentName:"h2"},"idmap")," cache"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Ref: ",(0,r.kt)("a",{parentName:"p",href:"https://lists.samba.org/archive/samba/2020-November/233323.html"},"ID Mapping"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Need to clear after changing ",(0,r.kt)("inlineCode",{parentName:"li"},"idmap"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"systemctl stop winbind smbd\nnet cache flush\nsystemctl start winbind smbd\n")),(0,r.kt)("h2",{id:"kerberos"},"Kerberos"),(0,r.kt)("p",null,"List Kerberos cached tickets"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"klist\n")),(0,r.kt)("p",null,"Clear Kerberos cached tickets"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# kdestroy [-A] [-c cache_name] [-p princ_name]\nkdestroy -A\n")),(0,r.kt)("h2",{id:"test-and-dump-samba-config"},"Test and dump Samba config"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"testparm [-s]\n")),(0,r.kt)("h2",{id:"reload-config"},"Reload config"),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"This does not reload"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"smbcontrol smbd reload-config\n"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"systemctl restart smbd.service\n")),(0,r.kt)("h2",{id:"check-domain--winbind-user"},"Check domain / WinBind user"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If ",(0,r.kt)("inlineCode",{parentName:"li"},"/etc/nsswitch.conf")," has added ",(0,r.kt)("inlineCode",{parentName:"li"},"winbind"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"id")," command can check domain user"),(0,r.kt)("li",{parentName:"ul"},"Check ",(0,r.kt)("inlineCode",{parentName:"li"},"idmap")," info")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-conf",metastring:'title="/etc/nsswitch.conf"',title:'"/etc/nsswitch.conf"'},"passwd:         files systemd winbind\ngroup:          files systemd winbind\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# id '<domain>\\<user>'\n# id '<user>@<domain>'\nid 'EXAMPLE\\user'\nid 'user@example.com'\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"uid=11000(user) gid=10500(domain users) groups=10500(domain users)\n")),(0,r.kt)("h2",{id:"list-winbind-users"},"List WinBind users"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"wbinfo -u\n")),(0,r.kt)("h2",{id:"enable-extended-acl-support"},"Enable Extended ACL Support"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Ref: ",(0,r.kt)("a",{parentName:"p",href:"https://wiki.samba.org/index.php/Setting_up_a_Share_Using_Windows_ACLs"},"Setting up a Share Using Windows ACLs"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ini"},"[global]\nvfs objects = acl_xattr\nmap acl inherit = yes\n")),(0,r.kt)("h2",{id:"audit"},"Audit"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Log to ",(0,r.kt)("inlineCode",{parentName:"li"},"syslog"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Ref: ",(0,r.kt)("inlineCode",{parentName:"p"},"man vfs_audit"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ini"},"[global]\n\n# Log the following Samba VFS operations:\n# connect disconnect opendir mkdir rmdir open close rename unlink chmod fchmod\n\nvfs objects = audit\n# audit:facility = local1\n# audit:priority = info\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Ref: ",(0,r.kt)("inlineCode",{parentName:"p"},"man vfs_full_audit"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"VFS full audit operations change in different version, even ",(0,r.kt)("inlineCode",{parentName:"p"},"man vfs_full_audit")," is not updated")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"If un-supported operation is set, ",(0,r.kt)("inlineCode",{parentName:"p"},"all")," is used"),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"Ref: ",(0,r.kt)("inlineCode",{parentName:"p"},"init_bitmap()")," in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/samba-team/samba/blob/master/source3/modules/vfs_full_audit.c"},(0,r.kt)("inlineCode",{parentName:"a"},"vfs_full_audit.c")))))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ini"},"[global]\n\n# Log specified Samba VFS operations\n# https://www.samba.org/samba/docs/current/man-html/vfs_full_audit.8.html\n\nvfs objects = full_audit\n# Default\n# full_audit:prefix = %u|%I\n\nfull_audit:failure = connect disconnect opendir closedir mkdir rmdir open close rename unlink\nfull_audit:success = connect disconnect opendir closedir mkdir rmdir open close rename unlink\n\n# auth, authpriv, cron, daemon, kern, lpr, mail, mark, news, syslog, user, uucp, local0, ..., local7\nfull_audit:facility = local1\n\n# debug, info, notice, warning, err, crit, alert, emerg\nfull_audit:priority = info\n")),(0,r.kt)("h2",{id:"samba-member-server-ads-config"},"Samba member server (ADS) config"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ini"},"[global]\n    security = ADS\n    realm = EXAMPLE.COM\n    workgroup = EXAMPLE\n    kerberos method = secrets and keytab\n    winbind enum users = yes\n    winbind enum groups = yes\n    winbind offline logon = Yes\n    winbind refresh tickets = Yes\n\n    # Access ID without domain\n    # `id user` = `id 'EXAMPLE\\user'`\n    winbind use default domain = Yes\n\n    idmap config EXAMPLE : range = 2000000-2999999\n    idmap config EXAMPLE : backend = rid\n    idmap config * : range = 1000000-1999999\n    idmap config * : backend = tdb\n")))}u.isMDXComponent=!0}}]);