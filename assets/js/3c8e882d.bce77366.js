"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[1342],{87485:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(76687);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(t),m=a,k=d["".concat(u,".").concat(m)]||d[m]||c[m]||l;return t?r.createElement(k,o(o({ref:n},p),{},{components:t})):r.createElement(k,o({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,o=new Array(l);o[0]=d;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},35974:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var r=t(76274),a=(t(76687),t(87485));const l={},o="Linux ACL",i={unversionedId:"Linux/ACL",id:"Linux/ACL",title:"Linux ACL",description:"Access Control List",source:"@site/docs/Linux/ACL.md",sourceDirName:"Linux",slug:"/Linux/ACL",permalink:"/note/Linux/ACL",draft:!1,editUrl:"https://github.com/steelywing/note/edit/master/docs/Linux/ACL.md",tags:[],version:"current",frontMatter:{},sidebar:"linux",previous:{title:"Linux",permalink:"/note/Linux/"},next:{title:"Auto start",permalink:"/note/Linux/Auto start"}},u={},s=[{value:"ACL order",id:"acl-order",level:2},{value:"Mask",id:"mask",level:2}],p={toc:s};function c(e){let{components:n,...l}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,l,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"linux-acl"},"Linux ACL"),(0,a.kt)("p",null,"Access Control List"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Directory has default ACL, the ACL is applied to the file and directory created in that directory")),(0,a.kt)("h2",{id:"acl-order"},"ACL order"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Ref: ",(0,a.kt)("a",{target:"_blank",href:t(32789).Z},"POSIX Access Control Lists on Linux"))),(0,a.kt)("p",null,"First matched entry is used"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"owner"),(0,a.kt)("li",{parentName:"ul"},"named users"),(0,a.kt)("li",{parentName:"ul"},"(owning or named) groups"),(0,a.kt)("li",{parentName:"ul"},"others")),(0,a.kt)("mermaid",{value:'flowchart TD\n    matched["use matched \\n ACL entry"]\n    owner{{"match \\n owner?"}}\n    named_users{{"match \\n named users?"}}\n    groups{{"match \\n any (owning or named) groups?"}}\n    any_group{{"is any matched ACL entry \\n that has granted required permission?"}}\n    others["use `others` ACL entry"]\n    allow["allow"]\n    deny["deny"]\n    owner --Y--\x3e matched\n    owner --N--\x3e named_users\n    named_users --Y--\x3e matched\n    named_users --N--\x3e groups\n    groups --Y--\x3e any_group\n    any_group --Y--\x3e allow\n    any_group --N--\x3e deny\n    groups --N--\x3e others'}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"id admin\n\nuid=1000(admin) gid=1000(admin) groups=1000(admin),1001(user)\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"id user\n\nuid=1001(user) gid=1001(user) groups=1001(user)\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"getfacl file\n\n# file: file\n# owner: root\n# group: root\nuser::rw-\ngroup::r--\ngroup:user:---\ngroup:admin:r--\nmask::r--\nother::---\n")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"User"),(0,a.kt)("th",{parentName:"tr",align:null},"Read ",(0,a.kt)("inlineCode",{parentName:"th"},"file")))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"admin")),(0,a.kt)("td",{parentName:"tr",align:null},"allow")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"user")),(0,a.kt)("td",{parentName:"tr",align:null},"deny")))),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"admin")," is in 2 groups ",(0,a.kt)("inlineCode",{parentName:"p"},"admin")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"user"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"user")," group is deny access ",(0,a.kt)("inlineCode",{parentName:"p"},"file"),", but ",(0,a.kt)("inlineCode",{parentName:"p"},"admin")," is allow, so ",(0,a.kt)("inlineCode",{parentName:"p"},"admin")," still allow access."),(0,a.kt)("h2",{id:"mask"},"Mask"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Ref: ",(0,a.kt)("a",{parentName:"p",href:"https://linuxdatahub.com/masks-in-acl-linux-explained-with-examples-access-control-lists-mask/"},"ACL Mask Value in Linux"))),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Ref: ",(0,a.kt)("inlineCode",{parentName:"p"},"man setfacl"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Masks are the highest permission allowed for user / group"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"setfacl")," auto create mask entry (union all ACL entries) by default, unless option ",(0,a.kt)("inlineCode",{parentName:"li"},"-n")," is set"),(0,a.kt)("li",{parentName:"ul"},"Masks only apply to extended ACL (",(0,a.kt)("inlineCode",{parentName:"li"},"setfacl"),"), not apply to minimal ACL")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"function effective_permission(mask, acl_entry) {\n    return mask & acl_entry;\n}\n\nfunction is_granted(user, operation, acl) {\n    return \n        operation & \n        effective_permission(mask(acl) & matched_entry(user, acl))\n        > 0;\n}\n")))}c.isMDXComponent=!0},32789:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/files/acl-124eb5c6ae9f61e3187d34d8d7804702.pdf"}}]);