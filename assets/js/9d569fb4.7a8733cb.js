"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[7109],{87485:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(76687);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(r),m=a,f=d["".concat(c,".").concat(m)]||d[m]||s[m]||l;return r?n.createElement(f,o(o({ref:t},u),{},{components:r})):n.createElement(f,o({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var p=2;p<l;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},17799:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>s,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var n=r(76274),a=(r(76687),r(87485));const l={},o=void 0,i={unversionedId:"Note/RFID",id:"Note/RFID",title:"RFID",description:"LF (Low Frequency)",source:"@site/docs/Note/RFID.md",sourceDirName:"Note",slug:"/Note/RFID",permalink:"/note/Note/RFID",draft:!1,editUrl:"https://github.com/steelywing/note/edit/master/docs/Note/RFID.md",tags:[],version:"current",frontMatter:{},sidebar:"note",previous:{title:"X509",permalink:"/note/Note/OpenSSL/X509"},next:{title:"Radiation",permalink:"/note/Note/Radiation"}},c={},p=[{value:"LF (Low Frequency)",id:"lf-low-frequency",level:2},{value:"EM4100",id:"em4100",level:3},{value:"HF (High Frequency)",id:"hf-high-frequency",level:2},{value:"MiFare",id:"mifare",level:3},{value:"MiFare Classic",id:"mifare-classic",level:4},{value:"PICC status",id:"picc-status",level:5},{value:"Memory Organization",id:"memory-organization",level:5},{value:"NFC",id:"nfc",level:3}],u={toc:p};function s(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"lf-low-frequency"},"LF (Low Frequency)"),(0,a.kt)("p",null,"RF: 125 KHz"),(0,a.kt)("h3",{id:"em4100"},"EM4100"),(0,a.kt)("p",null,"Alias: ID card"),(0,a.kt)("h2",{id:"hf-high-frequency"},"HF (High Frequency)"),(0,a.kt)("p",null,"RF: 13.56 MHz"),(0,a.kt)("p",null,"ISO 18000-3"),(0,a.kt)("p",null,"Reader: MFRC522 (SPI port), PN532 (UART port)"),(0,a.kt)("h3",{id:"mifare"},"MiFare"),(0,a.kt)("h4",{id:"mifare-classic"},"MiFare Classic"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.nxp.com/docs/en/data-sheet/MF1S50YYX_V1.pdf"},"MiFare Classic 1K Reference")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.nxp.com/docs/en/data-sheet/MF1S70YYX_V1.pdf"},"MiFare Classic 4K Reference")),(0,a.kt)("p",null,"ISO/IEC 14443 Type A"),(0,a.kt)("p",null,"Alias: IC card"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/nfc-tools/mfoc"},"MiFare Classic Offline Cracker")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/nfc-tools/mfcuk"},"MiFare Classic Universal toolKit")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"PICC"),(0,a.kt)("td",{parentName:"tr",align:null},"Proximity Integrated Circuit Card (Contactless Card)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"ACK"),(0,a.kt)("td",{parentName:"tr",align:null},"Acknowledge")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"NAK"),(0,a.kt)("td",{parentName:"tr",align:null},"Not AcKnowledge")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"RF"),(0,a.kt)("td",{parentName:"tr",align:null},"Radio Frequency")))),(0,a.kt)("h5",{id:"picc-status"},"PICC status"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"IDLE\n \u2b07    Wake Up A / Request A\nREADY\n \u2b07    Select / Read Card Serial\nACTIVE\n \u2b07    Halt A\nHALT\n \u2b07    Wake Up A\nREADY\n")),(0,a.kt)("h5",{id:"memory-organization"},"Memory Organization"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"MiFare Classic 1K = 16 \u2716 Sector\n\nSector = 3 \u2716 Data Block + Sector Trailer = 4 \u2716 (16 Bytes)\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"MiFare Classic 4K = \n  32 \u2716 Sector ( 3 \u2716 Block + Sector Trailer) + \n   8 \u2716 Sector (15 \u2716 Block + Sector Trailer)\n    = 256 \u2716 Block\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Sector[0] Read Only\nSector[0] Block[0] = 4 \u2716 UID + Manufacturer Data\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Data Block = 16 Bytes\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Sector Trailer = Key A (6 Bytes) + Access Bits (4 Bytes) + Key B (6 Bytes)\n")),(0,a.kt)("h3",{id:"nfc"},"NFC"))}s.isMDXComponent=!0}}]);