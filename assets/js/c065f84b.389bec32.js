(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[1341],{3905:function(e,r,t){"use strict";t.d(r,{Zo:function(){return u},kt:function(){return y}});var n=t(7294);function l(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){l(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function o(e,r){if(null==e)return{};var t,n,l=function(e,r){if(null==e)return{};var t,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(l[t]=e[t]);return l}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=n.createContext({}),c=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=c(e.components);return n.createElement(s.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=c(t),y=l,m=d["".concat(s,".").concat(y)]||d[y]||p[y]||a;return t?n.createElement(m,i(i({ref:r},u),{},{components:t})):n.createElement(m,i({ref:r},u))}));function y(e,r){var t=arguments,l=r&&r.mdxType;if("string"==typeof e||l){var a=t.length,i=new Array(a);i[0]=d;var o={};for(var s in r)hasOwnProperty.call(r,s)&&(o[s]=r[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var c=2;c<a;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6141:function(e,r,t){"use strict";t.r(r),t.d(r,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var n=t(2122),l=t(9756),a=(t(7294),t(3905)),i=["components"],o={sidebar_label:"Registry"},s="Registry - PowerShell",c={unversionedId:"Windows/PowerShell/Registry",id:"Windows/PowerShell/Registry",isDocsHomePage:!1,title:"Registry - PowerShell",description:"List available registry drive",source:"@site/docs/Windows/PowerShell/Registry.md",sourceDirName:"Windows/PowerShell",slug:"/Windows/PowerShell/Registry",permalink:"/note/Windows/PowerShell/Registry",editUrl:"https://github.com/steelywing/note/edit/master/docs/Windows/PowerShell/Registry.md",version:"current",frontMatter:{sidebar_label:"Registry"},sidebar:"windows",previous:{title:"Network",permalink:"/note/Windows/PowerShell/Network"},next:{title:"String",permalink:"/note/Windows/PowerShell/String"}},u=[{value:"List available registry drive",id:"list-available-registry-drive",children:[]},{value:"Key",id:"key",children:[{value:"List keys",id:"list-keys",children:[]},{value:"Create key",id:"create-key",children:[]},{value:"Delete key",id:"delete-key",children:[]}]},{value:"Value",id:"value",children:[{value:"Get values",id:"get-values",children:[]},{value:"Set value",id:"set-value",children:[]},{value:"Remove value",id:"remove-value",children:[]}]}],p={toc:u};function d(e){var r=e.components,t=(0,l.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"registry---powershell"},"Registry - PowerShell"),(0,a.kt)("h2",{id:"list-available-registry-drive"},"List available registry drive"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"Get-PSDrive -PSProvider Registry\n\ncd HKCU:\ncd HKLM:\n")),(0,a.kt)("p",null,"Using Registry provider"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"ls Registry::\n\ncd Registry:: # Tab / Ctrl + Space\n")),(0,a.kt)("h2",{id:"key"},"Key"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/powershell/scripting/samples/working-with-registry-keys?view=powershell-7"},"Reference"))),(0,a.kt)("h3",{id:"list-keys"},"List keys"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"ls [<key path>]\n")),(0,a.kt)("h3",{id:"create-key"},"Create key"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"ni <key path>\n")),(0,a.kt)("h3",{id:"delete-key"},"Delete key"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"ri <key path>\n")),(0,a.kt)("h2",{id:"value"},"Value"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/powershell/scripting/samples/working-with-registry-entries?view=powershell-7"},"Reference"))),(0,a.kt)("h3",{id:"get-values"},"Get values"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"gp <key path> [-Name <name>]\n")),(0,a.kt)("h3",{id:"set-value"},"Set value"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"sp <key path>\n  -Name <name>\n  -Value <value>\n  [-Type { Binary | DWord | QWord | ExpandString | MultiString | String }]\n")),(0,a.kt)("h3",{id:"remove-value"},"Remove value"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"rp <key path> -Name <name>\n")))}d.isMDXComponent=!0}}]);