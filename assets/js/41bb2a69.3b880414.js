"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[3933],{87485:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(76687);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=c(n),d=a,g=m["".concat(p,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(g,l(l({ref:t},s),{},{components:n})):r.createElement(g,l({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},83727:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(76274),a=(n(76687),n(87485));const o={},l="DLL",i={unversionedId:"Programming/C-Sharp/DLL",id:"Programming/C-Sharp/DLL",title:"DLL",description:"Reference .NET DLL",source:"@site/docs/Programming/C-Sharp/DLL.md",sourceDirName:"Programming/C-Sharp",slug:"/Programming/C-Sharp/DLL",permalink:"/note/Programming/C-Sharp/DLL",draft:!1,editUrl:"https://github.com/steelywing/note/edit/master/docs/Programming/C-Sharp/DLL.md",tags:[],version:"current",frontMatter:{},sidebar:"programming",previous:{title:"Async / Task",permalink:"/note/Programming/C-Sharp/Async"},next:{title:"Delegate",permalink:"/note/Programming/C-Sharp/Delegate"}},p={},c=[{value:"Reference .NET DLL",id:"reference-net-dll",level:2},{value:"Call native unmanaged DLL",id:"call-native-unmanaged-dll",level:2}],s={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"dll"},"DLL"),(0,a.kt)("h2",{id:"reference-net-dll"},"Reference .NET DLL"),(0,a.kt)("p",null,"Add ",(0,a.kt)("a",{parentName:"p",href:"https://steamworks.github.io/installation/"},"Steamworks.NET")," reference"),(0,a.kt)("p",null,"Edit ",(0,a.kt)("inlineCode",{parentName:"p"},".csproj")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<Project Sdk="Microsoft.NET.Sdk">\n  <ItemGroup>\n    <Reference Include="Steamworks.NET">\n      <HintPath>Steamworks.NET.dll</HintPath>\n      <SpecificVersion>False</SpecificVersion> \n      \x3c!-- Copy DLL to Output folder --\x3e\n      <Private>True</Private>\n    </Reference>\n  </ItemGroup>\n</Project>\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Copy ",(0,a.kt)("inlineCode",{parentName:"li"},"Steamworks.NET.dll")," file to ",(0,a.kt)("inlineCode",{parentName:"li"},"root")," folder"),(0,a.kt)("li",{parentName:"ul"},"Run ",(0,a.kt)("inlineCode",{parentName:"li"},"dotnet restore [<project.csproj>]")),(0,a.kt)("li",{parentName:"ul"},"Run ",(0,a.kt)("inlineCode",{parentName:"li"},"dotnet run"))),(0,a.kt)("h2",{id:"call-native-unmanaged-dll"},"Call native unmanaged DLL"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},'using System;\nusing System.Runtime.InteropServices;\n\n[DllImport("user32.dll", CharSet = CharSet.Unicode)]\nstatic extern int MessageBox(IntPtr hWnd, String text, String caption, uint type);\n\nMessageBox(new IntPtr(0), "Hello World!", "Hello Dialog", 0);\n')),(0,a.kt)("p",null,"Using ",(0,a.kt)("inlineCode",{parentName:"p"},"ref")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},'using System;\nusing System.Runtime.InteropServices;\nusing System.Runtime.CompilerServices;\n\n[DllImport("user32.dll", CharSet = CharSet.Unicode)]\nstatic extern int MessageBox(ref int hWnd, String text, String caption, uint type);\n\nMessageBox(ref Unsafe.NullRef<int>(), "Hello World!", "Hello Dialog", 0);\n')),(0,a.kt)("p",null,"Copy DLL to output folder"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<Project Sdk="Microsoft.NET.Sdk">\n  <Target Name="CopyFiles" AfterTargets="AfterBuild">\n    <ItemGroup>\n      <DllFiles Include="*.dll" />\n    </ItemGroup>\n    <Copy SourceFiles="@(DllFiles)" DestinationFolder="$(OutDir)" />\n  </Target>\n</Project>\n')))}u.isMDXComponent=!0}}]);