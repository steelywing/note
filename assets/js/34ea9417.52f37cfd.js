(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[2584],{3905:function(e,n,r){"use strict";r.d(n,{Zo:function(){return c},kt:function(){return p}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function g(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?g(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):g(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function a(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},g=Object.keys(e);for(t=0;t<g.length;t++)r=g[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var g=Object.getOwnPropertySymbols(e);for(t=0;t<g.length;t++)r=g[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=t.createContext({}),m=function(e){var n=t.useContext(i),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},c=function(e){var n=m(e.components);return t.createElement(i.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,g=e.originalType,i=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),u=m(r),p=o,f=u["".concat(i,".").concat(p)]||u[p]||s[p]||g;return r?t.createElement(f,l(l({ref:n},c),{},{components:r})):t.createElement(f,l({ref:n},c))}));function p(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var g=r.length,l=new Array(g);l[0]=u;var a={};for(var i in n)hasOwnProperty.call(n,i)&&(a[i]=n[i]);a.originalType=e,a.mdxType="string"==typeof e?e:o,l[1]=a;for(var m=2;m<g;m++)l[m]=r[m];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},2280:function(e,n,r){"use strict";r.r(n),r.d(n,{frontMatter:function(){return a},contentTitle:function(){return i},metadata:function(){return m},toc:function(){return c},default:function(){return u}});var t=r(2122),o=r(9756),g=(r(7294),r(3905)),l=["components"],a={},i="Logging - Python",m={unversionedId:"Programming/Python/Logging",id:"Programming/Python/Logging",isDocsHomePage:!1,title:"Logging - Python",description:"How To",source:"@site/docs/Programming/Python/Logging.md",sourceDirName:"Programming/Python",slug:"/Programming/Python/Logging",permalink:"/note/Programming/Python/Logging",editUrl:"https://github.com/steelywing/note/edit/master/docs/Programming/Python/Logging.md",version:"current",frontMatter:{},sidebar:"programming",previous:{title:"Basic",permalink:"/note/Programming/Python/"},next:{title:"Thread",permalink:"/note/Programming/Python/Thread"}},c=[{value:"Color Logging",id:"color-logging",children:[]}],s={toc:c};function u(e){var n=e.components,r=(0,o.Z)(e,l);return(0,g.kt)("wrapper",(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,g.kt)("h1",{id:"logging---python"},"Logging - Python"),(0,g.kt)("blockquote",null,(0,g.kt)("p",{parentName:"blockquote"},(0,g.kt)("a",{parentName:"p",href:"https://docs.python.org/3/howto/logging.html"},"How To"))),(0,g.kt)("pre",null,(0,g.kt)("code",{parentName:"pre",className:"language-py"},'import logging\n\nLOG_FILE = "/var/log/python.log"\n\n# get a module-level logger\nlogger = logging.getLogger(__name__)\n\n# get the root logger\nlogger = logging.getLogger()\n\n# specifies the lowest-severity the logger will handle\n# DEBUG < INFO < WARNING < ERROR < CRITICAL\nlogger.setLevel(logging.DEBUG)\n\n# output log to console\nhandler = logging.StreamHandler()\nhandler.setFormatter(logging.Formatter("%(message)s"))\nlogger.addHandler(handler)\n\n# output log to file\nhandler = logging.FileHandler(LOG_FILE)\nhandler.setFormatter(logging.Formatter("%(asctime)s %(message)s"))\nlogger.addHandler(handler)\n')),(0,g.kt)("pre",null,(0,g.kt)("code",{parentName:"pre",className:"language-py"},"import logging\n\nlogger = logging.getLogger()\n\nlogger.debug('debug message')\nlogger.info('info message')\nlogger.warning('warn message')\nlogger.error('error message')\nlogger.critical('critical message')\n")),(0,g.kt)("h2",{id:"color-logging"},"Color Logging"),(0,g.kt)("blockquote",null,(0,g.kt)("p",{parentName:"blockquote"},(0,g.kt)("a",{parentName:"p",href:"https://stackoverflow.com/a/56944256"},"Reference"))),(0,g.kt)("p",null,(0,g.kt)("inlineCode",{parentName:"p"},"ColorFormatter.py")),(0,g.kt)("pre",null,(0,g.kt)("code",{parentName:"pre",className:"language-py"},'import logging\n\nclass ColorFormatter(logging.Formatter):\n    """Color logging.Formatter"""\n\n    COLORS = {\n        # Blue\n        logging.INFO: "\\033[34m",\n        # Yellow\n        logging.WARNING: "\\033[33m",\n        # Red\n        logging.ERROR: "\\033[31m",\n        # Red\n        logging.CRITICAL: "\\033[31m",\n    }\n    RESET = "\\033[0m"\n\n    def __init__(self, fmt=None, *args, **kwargs):\n        super().__init__(fmt, *args, **kwargs)\n        self.formatters = {}\n        # Create formatters for each level\n        for level, color in self.COLORS.items():\n            self.formatters[level] = logging.Formatter(\n                "{}{}{}".format(color, fmt, self.RESET),\n                *args,\n                **kwargs\n            )\n\n    def format(self, record):\n        if record.levelno in self.formatters:\n            return self.formatters[record.levelno].format(record)\n        return super().format(record)\n')),(0,g.kt)("pre",null,(0,g.kt)("code",{parentName:"pre",className:"language-py"},'import logging\nfrom ColorFormatter import ColorFormatter\n\nlogger = logging.getLogger()\nlogger.setLevel(logging.DEBUG)\n\nhandler = logging.StreamHandler()\nhandler.setFormatter(ColorFormatter("%(message)s"))\nlogger.addHandler(handler)\n')))}u.isMDXComponent=!0}}]);