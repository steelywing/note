"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[1342],{87485:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>c});var a=t(76687);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=a.createContext({}),s=function(e){var n=a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=s(e.components);return a.createElement(u.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=s(t),c=r,k=d["".concat(u,".").concat(c)]||d[c]||m[c]||l;return t?a.createElement(k,i(i({ref:n},p),{},{components:t})):a.createElement(k,i({ref:n},p))}));function c(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=d;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},17912:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=t(76274),r=(t(76687),t(87485));const l={sidebar_label:"ACL"},i="ACL - Linux",o={unversionedId:"Linux/ACL",id:"Linux/ACL",title:"ACL - Linux",description:"Access Control List",source:"@site/docs/Linux/ACL.md",sourceDirName:"Linux",slug:"/Linux/ACL",permalink:"/note/Linux/ACL",draft:!1,editUrl:"https://github.com/steelywing/note/edit/master/docs/Linux/ACL.md",tags:[],version:"current",frontMatter:{sidebar_label:"ACL"},sidebar:"linux",previous:{title:"Linux",permalink:"/note/Linux/"},next:{title:"Auto start",permalink:"/note/Linux/Auto start"}},u={},s=[{value:"ACL order",id:"acl-order",level:2},{value:"Group ACL entry",id:"group-acl-entry",level:2},{value:"Example",id:"example",level:2},{value:"Mask",id:"mask",level:2}],p={toc:s};function m(e){let{components:n,...l}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,l,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"acl---linux"},"ACL - Linux"),(0,r.kt)("p",null,"Access Control List"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Directory has default ACL, the ACL is applied to the file and directory created in that directory")),(0,r.kt)("h2",{id:"acl-order"},"ACL order"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Ref: ",(0,r.kt)("a",{target:"_blank",href:t(44110).Z},"POSIX Access Control Lists on Linux"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"First matched")," entry is used"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"owner"),(0,r.kt)("li",{parentName:"ul"},"named users"),(0,r.kt)("li",{parentName:"ul"},"(owning or named) groups"),(0,r.kt)("li",{parentName:"ul"},"others")),(0,r.kt)("mermaid",{value:'flowchart TD\n    matched["use matched \\n ACL entry"]\n    owner{{"match \\n owner?"}}\n    named_users{{"match \\n named users?"}}\n    groups{{"match \\n any (owning or named) groups?"}}\n    any_group{{"is any matched ACL entry \\n that has granted required permission?"}}\n    others["use `others` ACL entry"]\n    allow["allow"]\n    deny["deny"]\n    owner --Y--\x3e matched\n    owner --N--\x3e named_users\n    named_users --Y--\x3e matched\n    named_users --N--\x3e groups\n    groups --Y--\x3e any_group\n    any_group --Y--\x3e allow\n    any_group --N--\x3e deny\n    groups --N--\x3e others'}),(0,r.kt)("h2",{id:"group-acl-entry"},"Group ACL entry"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Group entry is not using the first matched, each matched group entry is checked"),(0,r.kt)("li",{parentName:"ul"},"If any matched group entry is allow, the request is allow.")),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"admin")," is in groups ",(0,r.kt)("inlineCode",{parentName:"p"},"admin")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"user")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"id admin\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"uid=1000(admin) gid=1000(admin) groups=1000(admin),1001(user)\n")),(0,r.kt)("hr",null),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"user")," is in group ",(0,r.kt)("inlineCode",{parentName:"p"},"user")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"id user\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"uid=1001(user) gid=1001(user) groups=1001(user)\n")),(0,r.kt)("hr",null),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"getfacl file\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# file: file\n# owner: root\n# group: root\nuser::rw-\ngroup::r--\ngroup:user:---\ngroup:admin:r--\nmask::r--\nother::---\n")),(0,r.kt)("hr",null),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"getfacl first\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# file: first\n# owner: root\n# group: root\nuser::rw-\ngroup::r--\nuser:admin:---\ngroup:user:---\ngroup:admin:r--\nmask::r--\nother::---\n")),(0,r.kt)("hr",null),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"User"),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"th"},"cat file")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"th"},"cat first")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"admin")),(0,r.kt)("td",{parentName:"tr",align:null},"allow"),(0,r.kt)("td",{parentName:"tr",align:null},"deny")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"user")),(0,r.kt)("td",{parentName:"tr",align:null},"deny"),(0,r.kt)("td",{parentName:"tr",align:null},"deny")))),(0,r.kt)("hr",null),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"admin")," read ",(0,r.kt)("inlineCode",{parentName:"p"},"file")," is allow"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"getfacl file\n...\ngroup:user:---\ngroup:admin:r--\nmask::r--\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"user ",(0,r.kt)("inlineCode",{parentName:"p"},"admin")," is allow to access ",(0,r.kt)("inlineCode",{parentName:"p"},"file")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"allow access if any group of the process is granted permission"),(0,r.kt)("li",{parentName:"ul"},"even group ",(0,r.kt)("inlineCode",{parentName:"li"},"user")," is deny")))),(0,r.kt)("hr",null),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"admin")," read ",(0,r.kt)("inlineCode",{parentName:"p"},"first")," is deny"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"getfacl first\n...\nuser:admin:---\ngroup:user:---\ngroup:admin:r--\nmask::r--\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"user ",(0,r.kt)("inlineCode",{parentName:"p"},"admin")," is deny access ",(0,r.kt)("inlineCode",{parentName:"p"},"first")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"first matched named user ACL is used"),(0,r.kt)("li",{parentName:"ul"},"even group ",(0,r.kt)("inlineCode",{parentName:"li"},"admin")," is allow access")))),(0,r.kt)("h2",{id:"mask"},"Mask"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Ref: ",(0,r.kt)("a",{parentName:"p",href:"https://linuxdatahub.com/masks-in-acl-linux-explained-with-examples-access-control-lists-mask/"},"ACL Mask Value in Linux"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Ref: ",(0,r.kt)("inlineCode",{parentName:"p"},"man setfacl"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Masks are the highest permission allowed for user / group"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"setfacl")," auto create mask entry (union all ACL entries) by default, unless option ",(0,r.kt)("inlineCode",{parentName:"li"},"-n")," is set"),(0,r.kt)("li",{parentName:"ul"},"Masks only apply to extended ACL (",(0,r.kt)("inlineCode",{parentName:"li"},"setfacl"),"), not apply to minimal ACL")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="pseudo code"',title:'"pseudo','code"':!0},"function effective_permission(mask, acl_entry) {\n    return mask & acl_entry;\n}\n\nfunction is_granted(user, operation, file_acl) {\n  return \n    operation & \n    effective_permission(\n      file_acl.mask,\n      matched_entry(user, file_acl)\n    )\n    > 0;\n}\n")))}m.isMDXComponent=!0},44110:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/files/acl-124eb5c6ae9f61e3187d34d8d7804702.pdf"}}]);