"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[6381],{87485:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(76687);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=s(n),f=a,m=d["".concat(l,".").concat(f)]||d[f]||u[f]||i;return n?r.createElement(m,c(c({ref:t},p),{},{components:n})):r.createElement(m,c({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,c=new Array(i);c[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,c[1]=o;for(var s=2;s<i;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},59696:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var r=n(76274),a=(n(76687),n(87485));const i={sidebar_label:"CA"},c="CA - OpenSSL",o={unversionedId:"Note/OpenSSL/CA",id:"Note/OpenSSL/CA",title:"CA - OpenSSL",description:"Certificate Authority",source:"@site/docs/Note/OpenSSL/CA.md",sourceDirName:"Note/OpenSSL",slug:"/Note/OpenSSL/CA",permalink:"/note/Note/OpenSSL/CA",draft:!1,editUrl:"https://github.com/steelywing/note/edit/master/docs/Note/OpenSSL/CA.md",tags:[],version:"current",frontMatter:{sidebar_label:"CA"},sidebar:"note",previous:{title:"Build from source",permalink:"/note/Note/OpenSSL/Build"},next:{title:"CSR",permalink:"/note/Note/OpenSSL/CSR"}},l={},s=[{value:"Config",id:"config",level:2},{value:"CA certificate",id:"ca-certificate",level:2},{value:"CA sign certificate",id:"ca-sign-certificate",level:2},{value:"CRL",id:"crl",level:2},{value:"Revoke signed certificate",id:"revoke-signed-certificate",level:2},{value:"Generate CRL file",id:"generate-crl-file",level:3}],p={toc:s};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"ca---openssl"},"CA - OpenSSL"),(0,a.kt)("p",null,"Certificate Authority"),(0,a.kt)("blockquote",null,(0,a.kt)("ul",{parentName:"blockquote"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.openssl.org/docs/manmaster/man1/openssl-ca.html"},"Reference")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.openssl.org/docs/manmaster/man5/x509v3_config.html"},"X509 V3")))),(0,a.kt)("h2",{id:"config"},"Config"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ini"},"[ ca ]\ndefault_ca      = CA_default\n\n[ CA_default ]\ndir             = .\ndatabase        = $dir/database.txt\nnew_certs_dir   = $dir/new_certs\nunique_subject  = no\n\ncertificate     = $dir/ca.crt\nserial          = $dir/ca.srl\n# rand_serial     = yes\nprivate_key     = $dir/private/ca.key\nRANDFILE        = $dir/private/.rand\n\ndefault_days    = 365000\ndefault_crl_days= 365000\ndefault_md      = sha256\n\npolicy          = policy_any\nemail_in_dn     = no\n\n# Subject name display option\nname_opt        = ca_default\n# Certificate display option\ncert_opt        = ca_default\ncopy_extensions = copy\n\nx509_extensions = extensions\ncrl_extensions  = crl_exts\n\n[ policy_any ]\ncountryName             = optional\nstateOrProvinceName     = optional\nlocalityName            = optional\norganizationName        = supplied\norganizationalUnitName  = optional\ncommonName              = supplied\nemailAddress            = optional\n\n[ extensions ]\n# CA certificate\n# basicConstraints        = critical, CA:TRUE\n# basicConstraints        = critical, CA:TRUE, pathlen:1\n\n# End-user certificate\nbasicConstraints        = CA:FALSE\n\nsubjectKeyIdentifier    = hash\nauthorityKeyIdentifier  = keyid:always, issuer:always\nissuerAltName           = issuer:copy\ncrlDistributionPoints   = URI:http://example.com/ca.crl\n\n[ crl_exts ]\nauthorityKeyIdentifier = keyid:always,issuer:always\n")),(0,a.kt)("h2",{id:"ca-certificate"},"CA certificate"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/note/Note/OpenSSL/CSR#self-signed-certificate"},"Create self signed certificate")),(0,a.kt)("h2",{id:"ca-sign-certificate"},"CA sign certificate"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"openssl ca\n    # No prompt\n    [-batch]\n\n    [-config <ca.conf>]\n\n    -in <request.csr>\n    -out <cert.{crt|pem}>\n")),(0,a.kt)("h2",{id:"crl"},"CRL"),(0,a.kt)("p",null,"Certificate Revocation List"),(0,a.kt)("h2",{id:"revoke-signed-certificate"},"Revoke signed certificate"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"openssl ca\n    [-config <ca.conf>]\n    -revoke <cert.{crt|pem}>\n")),(0,a.kt)("h3",{id:"generate-crl-file"},"Generate CRL file"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"openssl ca -gencrl\n    [-config <ca.conf>]\n    -out <revoked.crl>\n")))}u.isMDXComponent=!0}}]);