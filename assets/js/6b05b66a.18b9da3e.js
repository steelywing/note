"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[3189],{17822:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var i=t(75366),s=t(26192);const r={},c="CSR",o={id:"Note/OpenSSL/CSR",title:"CSR",description:"Certificate Signing Request",source:"@site/docs/Note/OpenSSL/CSR.md",sourceDirName:"Note/OpenSSL",slug:"/Note/OpenSSL/CSR",permalink:"/note/Note/OpenSSL/CSR",draft:!1,unlisted:!1,editUrl:"https://github.com/steelywing/note/edit/master/docs/Note/OpenSSL/CSR.md",tags:[],version:"current",frontMatter:{},sidebar:"note",previous:{title:"CA",permalink:"/note/Note/OpenSSL/CA"},next:{title:"Key",permalink:"/note/Note/OpenSSL/Key"}},a={},l=[{value:"<code>&lt;key option&gt;</code>",id:"key-option",level:2},{value:"<code>&lt;subject options&gt;</code>",id:"subject-options",level:2},{value:"Creating CSR",id:"creating-csr",level:2},{value:"Self signed certificate",id:"self-signed-certificate",level:2},{value:"CSR configuration file",id:"csr-configuration-file",level:2},{value:"Generate CSR from an existing certificate",id:"generate-csr-from-an-existing-certificate",level:2},{value:"Verify CSR signature",id:"verify-csr-signature",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"csr",children:"CSR"}),"\n",(0,i.jsx)(n.p,{children:"Certificate Signing Request"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.digicert.com/ssl-support/openssl-quick-reference-guide.htm",children:"Reference"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.openssl.org/docs/manmaster/man1/openssl-req.html",children:"openssl req"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://tools.ietf.org/html/rfc2986",children:"RFC 2986"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"key-option",children:(0,i.jsx)(n.code,{children:"<key option>"})}),"\n",(0,i.jsx)(n.p,{children:"Create new key"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Create new private key, bits = 2048 / 4096\n-newkey rsa[:<bits>]\n# Don't encrypt private key (no password)\n[-nodes]\n# The new created private key file\n[-keyout <key.pem>]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Use exist key"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Use specified private key file\n-key <key.pem>\n"})}),"\n",(0,i.jsx)(n.h2,{id:"subject-options",children:(0,i.jsx)(n.code,{children:"<subject options>"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# <subject> = /C=<country>/ST=<state>/L=<city>/O=<organization>/OU=<section>/CN=<domain>/emailAddress=<email>\n[-subj "<subject>"]\n\n# <subjectAltName> = <DNS>|<IP>[,...]\n# <DNS> = DNS:example.com\n# <IP> = IP:10.0.0.1\n[-addext "subjectAltName=<subjectAltName>"]\n\n# Using config file\n[-config <config.ini>]\n'})}),"\n",(0,i.jsx)(n.h2,{id:"creating-csr",children:"Creating CSR"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"openssl req\n    <key option>\n\n    # Create new CSR\n    -new\n    -out <request.csr>\n\n    <subject options>\n"})}),"\n",(0,i.jsx)(n.h2,{id:"self-signed-certificate",children:"Self signed certificate"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"openssl req\n    <key option>\n\n    # Create self signed CRT (certificate) instead of CSR\n    -x509\n    -out <cert.pem>\n\n    # See X509\n    [<X509 options>]\n    [-set_serial <number>]\n    [-days <days>]\n    [...]\n\n    <subject options>\n"})}),"\n",(0,i.jsx)(n.h2,{id:"csr-configuration-file",children:"CSR configuration file"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ini",children:"[ req ]\n# <key length> = 2048 / 4096 / ...\ndefault_bits = <key length>\ndefault_keyfile = <key file>\ndistinguished_name = req_distinguished_name\nprompt = no\nencrypt_key = no\nreq_extensions = req_ext\n\n[ req_distinguished_name ]\n\n# C=\n# <country> = US | HK | TW | ...\n# ISO 3166-1 alpha-2\n# two-letter country codes\ncountryName = <country>\n\n# ST=\nstateOrProvinceName = <state>\n\n# L=\nlocalityName = <city>\n\n# O=\norganizationName = <company>\n# Multiple organization\n# 1.organizationName = <company>\n# 2.organizationName = <company>\n\n# OU=\norganizationalUnitName = <section / department>\n\n# CN=\n# For wildcard: *.example.com\ncommonName = <domain>\n\nemailAddress = <email>\n\n[ req_ext ]\n# Reference: https://www.openssl.org/docs/man1.1.1/man5/x509v3_config.html#Subject-Alternative-Name\n\n# subjectAltName=DNS:<domain>,DNS:<domain>...\n\n# same as\n\nsubjectAltName = @alt_section\n\n[ alt_section ]\nDNS.1 = <domain>\nDNS.2 = <domain>\n# ...\n"})}),"\n",(0,i.jsx)(n.h2,{id:"generate-csr-from-an-existing-certificate",children:"Generate CSR from an existing certificate"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"openssl x509\n  -in <cert.crt>\n  -signkey <key.pem>\n  -x509toreq\n  -out <cert.csr>\n"})}),"\n",(0,i.jsx)(n.h2,{id:"verify-csr-signature",children:"Verify CSR signature"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"openssl req -text -in <file.csr> -noout -verify\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},26192:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>c});var i=t(97049);const s={},r=i.createContext(s);function c(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);