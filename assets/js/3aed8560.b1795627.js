(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[7633],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(7294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},w=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),w=p(r),d=l,m=w["".concat(c,".").concat(d)]||w[d]||s[d]||o;return r?n.createElement(m,a(a({ref:t},u),{},{components:r})):n.createElement(m,a({ref:t},u))}));function d(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=r.length,a=new Array(o);a[0]=w;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:l,a[1]=i;for(var p=2;p<o;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}w.displayName="MDXCreateElement"},972:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return u},default:function(){return w}});var n=r(2122),l=r(9756),o=(r(7294),r(3905)),a=["components"],i={},c=void 0,p={unversionedId:"Windows/PowerShell/Network",id:"Windows/PowerShell/Network",isDocsHomePage:!1,title:"Network",description:"Network profile",source:"@site/docs/Windows/PowerShell/Network.md",sourceDirName:"Windows/PowerShell",slug:"/Windows/PowerShell/Network",permalink:"/note/Windows/PowerShell/Network",editUrl:"https://github.com/steelywing/note/edit/master/docs/Windows/PowerShell/Network.md",version:"current",frontMatter:{},sidebar:"windows",previous:{title:"Array",permalink:"/note/Windows/PowerShell/Array"},next:{title:"Registry",permalink:"/note/Windows/PowerShell/Registry"}},u=[{value:"Network profile",id:"network-profile",children:[]},{value:"Show TCP listening port",id:"show-tcp-listening-port",children:[]},{value:"Firewall",id:"firewall",children:[]},{value:"VLAN",id:"vlan",children:[{value:"Enable Virtual Switch",id:"enable-virtual-switch",children:[]},{value:"Create VLAN interface",id:"create-vlan-interface",children:[]},{value:"Remove VLAN interface",id:"remove-vlan-interface",children:[]}]}],s={toc:u};function w(e){var t=e.components,r=(0,l.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"network-profile"},"Network profile"),(0,o.kt)("p",null,"Get network profile"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-powershell"},"Get-NetConnectionProfile\n")),(0,o.kt)("p",null,"Set network profile"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-powershell"},"Set-NetConnectionProfile\n    { -InterfaceIndex <ID> | -Name <name> }\n    -NetworkCategory { Private | Public }\n")),(0,o.kt)("h2",{id:"show-tcp-listening-port"},"Show TCP listening port"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-powershell"},"Get-NetTCPConnection -State Listen [-LocalPort <port>]\n")),(0,o.kt)("h2",{id:"firewall"},"Firewall"),(0,o.kt)("p",null,"Allow ICMP echo request"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-powershell"},'New-NetFirewallRule `\n    -DisplayName "ICMPv4 echo request" `\n    -Direction Inbound `\n    -Protocol ICMPv4 `\n    -IcmpType 8 `\n    -Action Allow\n\nNew-NetFirewallRule `\n    -DisplayName "ICMPv6 echo request" `\n    -Direction Inbound `\n    -Protocol ICMPv6 `\n    -IcmpType 8 `\n    -Action Allow\n')),(0,o.kt)("h2",{id:"vlan"},"VLAN"),(0,o.kt)("h3",{id:"enable-virtual-switch"},"Enable Virtual Switch"),(0,o.kt)("p",null,"Enable Hyper-V virtual switch"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-powershell"},"Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V-Services\n")),(0,o.kt)("p",null,"Enable Hyper-V tools"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-powershell"},"Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V-Tools-All\n")),(0,o.kt)("p",null,"Add external virtual switch"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-powershell"},'$ethernet = Get-NetAdapter -Name "Ethernet"\nNew-VMSwitch -Name "External Switch" -NetAdapterName $ethernet.Name -AllowManagementOS $true\n')),(0,o.kt)("h3",{id:"create-vlan-interface"},"Create VLAN interface"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-powershell"},'Add-VMNetworkAdapter -ManagementOS -Name "<name>"\nSet-VMNetworkAdapterVlan -ManagementOS -VMNetworkAdapterName "<name>" -Access -VlanId <VLAN ID>\n')),(0,o.kt)("h3",{id:"remove-vlan-interface"},"Remove VLAN interface"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-powershell"},'Remove-VMNetworkAdapter -ManagementOS -Name "<name>"\n')))}w.isMDXComponent=!0}}]);