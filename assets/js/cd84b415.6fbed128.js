"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[1130],{75987:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>a,default:()=>g,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var i=t(75366),s=t(26192);const l={},a="Install - Nginx",r={id:"Note/Nginx/Install",title:"Install - Nginx",description:"Nginx repository",source:"@site/docs/Note/Nginx/Install.md",sourceDirName:"Note/Nginx",slug:"/Note/Nginx/Install",permalink:"/note/Note/Nginx/Install",draft:!1,unlisted:!1,editUrl:"https://github.com/steelywing/note/edit/master/docs/Note/Nginx/Install.md",tags:[],version:"current",frontMatter:{},sidebar:"note",previous:{title:"PHP FastCGI",permalink:"/note/Note/Nginx/FastCGI"},next:{title:"Load balancing",permalink:"/note/Note/Nginx/LoadBalancing"}},o={},c=[{value:"Nginx repository",id:"nginx-repository",level:2},{value:"Nginx official repository",id:"nginx-official-repository",level:3},{value:"CentOS EPEL repository",id:"centos-epel-repository",level:3},{value:"Install Nginx",id:"install-nginx",level:2},{value:"Allow HTTP / HTTPS traffic in firewall",id:"allow-http--https-traffic-in-firewall",level:2},{value:"Start Nginx",id:"start-nginx",level:2},{value:"Auto start",id:"auto-start",level:2},{value:"Restart Nginx",id:"restart-nginx",level:2},{value:"Build from source",id:"build-from-source",level:2}];function d(n){const e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"install---nginx",children:"Install - Nginx"}),"\n",(0,i.jsx)(e.h2,{id:"nginx-repository",children:"Nginx repository"}),"\n",(0,i.jsx)(e.h3,{id:"nginx-official-repository",children:"Nginx official repository"}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"http://nginx.org/en/linux_packages.html",children:"Official"})}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"CentOS / Red Hat"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-ini",metastring:"file=/etc/yum.repos.d/nginx.repo",children:"[nginx-stable]\nname=nginx stable repo\nbaseurl=http://nginx.org/packages/centos/$releasever/$basearch/\ngpgcheck=1\nenabled=1\ngpgkey=https://nginx.org/keys/nginx_signing.key\nmodule_hotfixes=true\n\n[nginx-mainline]\nname=nginx mainline repo\nbaseurl=http://nginx.org/packages/mainline/centos/$releasever/$basearch/\ngpgcheck=1\nenabled=0\ngpgkey=https://nginx.org/keys/nginx_signing.key\nmodule_hotfixes=true\n"})}),"\n",(0,i.jsx)(e.p,{children:"Ubuntu"}),"\n",(0,i.jsx)(e.p,{children:"Method 1"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",metastring:"file=/etc/apt/sources.list.d/nginx.list",children:"# Replace $release with your corresponding Ubuntu release.\n# Ubuntu 18 = bionic\n# Ubuntu 20 = focal\n# Ubuntu 22 = jammy\n\ndeb https://nginx.org/packages/ubuntu/ $release nginx\ndeb-src https://nginx.org/packages/ubuntu/ $release nginx\n"})}),"\n",(0,i.jsx)(e.p,{children:"Method 2"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:'# Install the prerequisites\nsudo apt install curl gnupg2 ca-certificates lsb-release ubuntu-keyring\n\n# Import the GPG key\ncurl https://nginx.org/keys/nginx_signing.key | gpg --dearmor \\\n    | sudo tee /usr/share/keyrings/nginx-archive-keyring.gpg >/dev/null\n\n# Verify the GPG key\ngpg --dry-run --quiet --import --import-options import-show /usr/share/keyrings/nginx-archive-keyring.gpg\n\n# Add repository\necho "deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] \\\nhttp://nginx.org/packages/debian `lsb_release -cs` nginx" \\\n    | sudo tee /etc/apt/sources.list.d/nginx.list\n\nsudo apt update\nsudo apt install nginx\n'})}),"\n",(0,i.jsx)(e.h3,{id:"centos-epel-repository",children:"CentOS EPEL repository"}),"\n",(0,i.jsx)(e.p,{children:"Less update"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"sudo yum install epel-release\n"})}),"\n",(0,i.jsx)(e.h2,{id:"install-nginx",children:"Install Nginx"}),"\n",(0,i.jsx)(e.p,{children:"Red Hat / CentOS"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"sudo yum install nginx\n"})}),"\n",(0,i.jsx)(e.p,{children:"Ubuntu"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"sudo apt update\nsudo apt install nginx\n"})}),"\n",(0,i.jsx)(e.h2,{id:"allow-http--https-traffic-in-firewall",children:"Allow HTTP / HTTPS traffic in firewall"}),"\n",(0,i.jsx)(e.p,{children:"Red Hat / CentOS"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"sudo firewall-cmd --permanent --zone=public --add-service=http\nsudo firewall-cmd --permanent --zone=public --add-service=https\nsudo firewall-cmd --reload\n"})}),"\n",(0,i.jsx)(e.h2,{id:"start-nginx",children:"Start Nginx"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"sudo systemctl start nginx\n"})}),"\n",(0,i.jsx)(e.h2,{id:"auto-start",children:"Auto start"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"sudo systemctl { enable | disable } nginx\n"})}),"\n",(0,i.jsx)(e.h2,{id:"restart-nginx",children:"Restart Nginx"}),"\n",(0,i.jsx)(e.p,{children:"Method 1"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"sudo systemctl restart nginx\n"})}),"\n",(0,i.jsx)(e.p,{children:"Method 2"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"nginx -s reload\n"})}),"\n",(0,i.jsx)(e.h2,{id:"build-from-source",children:"Build from source"}),"\n",(0,i.jsx)(e.p,{children:"CentOS"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:'# Install dependency\nyum install -y make gcc perl-core pcre-devel zlib-devel wget\n\nOPENSSL=openssl-1.1.1q\n\n# Download OpenSSL\nwget https://www.openssl.org/source/$OPENSSL.tar.gz\ntar -zxf $OPENSSL.tar.gz\n\n# Download Nginx\nwget http://nginx.org/download/nginx-1.22.0.tar.gz\ntar -zxf nginx-1.22.0.tar.gz\n\n# Get original Nginx config\nnginx -V\n\ncd nginx-1.22.0\n\n# Nginx CentOS default config\n# Ref: `nginx -V`\n./configure \\\n    --with-openssl="../$OPENSSL" \\\n    --prefix=/etc/nginx \\\n    --sbin-path=/usr/sbin/nginx \\\n    --modules-path=/usr/lib64/nginx/modules \\\n    --conf-path=/etc/nginx/nginx.conf \\\n    --error-log-path=/var/log/nginx/error.log \\\n    --http-log-path=/var/log/nginx/access.log \\\n    --pid-path=/var/run/nginx.pid \\\n    --lock-path=/var/run/nginx.lock \\\n    --http-client-body-temp-path=/var/cache/nginx/client_temp \\\n    --http-proxy-temp-path=/var/cache/nginx/proxy_temp \\\n    --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \\\n    --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \\\n    --http-scgi-temp-path=/var/cache/nginx/scgi_temp \\\n    --user=nginx \\\n    --group=nginx \\\n    --with-compat \\\n    --with-file-aio \\\n    --with-threads \\\n    --with-http_addition_module \\\n    --with-http_auth_request_module \\\n    --with-http_dav_module \\\n    --with-http_flv_module \\\n    --with-http_gunzip_module \\\n    --with-http_gzip_static_module \\\n    --with-http_mp4_module \\\n    --with-http_random_index_module \\\n    --with-http_realip_module \\\n    --with-http_secure_link_module \\\n    --with-http_slice_module \\\n    --with-http_ssl_module \\\n    --with-http_stub_status_module \\\n    --with-http_sub_module \\\n    --with-http_v2_module \\\n    --with-mail \\\n    --with-mail_ssl_module \\\n    --with-stream \\\n    --with-stream_realip_module \\\n    --with-stream_ssl_module \\\n    --with-stream_ssl_preread_module\n\n# Build\nmake\nsudo make install\n'})})]})}function g(n={}){const{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},26192:(n,e,t)=>{t.d(e,{Z:()=>r,a:()=>a});var i=t(97049);const s={},l=i.createContext(s);function a(n){const e=i.useContext(l);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:a(n.components),i.createElement(l.Provider,{value:e},n.children)}}}]);