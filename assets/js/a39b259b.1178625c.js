"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4542],{87485:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>d});var r=t(76687);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=s(t),d=a,f=m["".concat(p,".").concat(d)]||m[d]||c[d]||l;return t?r.createElement(f,o(o({ref:n},u),{},{components:t})):r.createElement(f,o({ref:n},u))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,o=new Array(l);o[0]=m;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3531:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var r=t(76274),a=(t(76687),t(87485));const l={},o="NetPlan",i={unversionedId:"Linux/NetPlan",id:"Linux/NetPlan",title:"NetPlan",description:"Ref: NetPlan documentation",source:"@site/docs/Linux/NetPlan.md",sourceDirName:"Linux",slug:"/Linux/NetPlan",permalink:"/note/Linux/NetPlan",draft:!1,editUrl:"https://github.com/steelywing/note/edit/master/docs/Linux/NetPlan.md",tags:[],version:"current",frontMatter:{},sidebar:"linux",previous:{title:"NFS",permalink:"/note/Linux/NFS"},next:{title:"Network",permalink:"/note/Linux/Network"}},p={},s=[{value:"Config",id:"config",level:2},{value:"Apply",id:"apply",level:2}],u={toc:s};function c(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"netplan"},"NetPlan"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Ref: ",(0,a.kt)("a",{parentName:"p",href:"https://netplan.readthedocs.io/en/stable/examples/"},"NetPlan documentation"))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Ubuntu 18 - 22 network manager"),(0,a.kt)("li",{parentName:"ul"},"Config files path: ",(0,a.kt)("inlineCode",{parentName:"li"},"/etc/netplan/*.yaml")),(0,a.kt)("li",{parentName:"ul"},"Config file name:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"1st config: ",(0,a.kt)("inlineCode",{parentName:"li"},"01-<name>.yaml")),(0,a.kt)("li",{parentName:"ul"},"2nd config: ",(0,a.kt)("inlineCode",{parentName:"li"},"02-<name>.yaml")),(0,a.kt)("li",{parentName:"ul"},"..."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"<name>")," can be whatever")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"# Package info\napt show netplan.io\n")),(0,a.kt)("h2",{id:"config"},"Config"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"network:\n    version: 2\n    ethernets:\n        # <interface name>:\n        enp5s0:\n            # dhcp4: true\n            addresses:\n            # - <IP address>/<net mask>\n            - 10.0.0.10/24\n            nameservers:\n                addresses:\n                # - <IP address>\n                - 10.0.0.1\n                search:\n                # - <search domain>\n                - example.org\n            routes:\n            - to: default\n              # via: <IP address>\n              via: 10.0.0.1\n              # metric: <metric>\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"# addresses: [<IP address>/<net mask>, ...]\naddresses: [10.0.0.10/24]\n\n# same as\n\naddresses:\n- 10.0.0.10/24\n")),(0,a.kt)("h2",{id:"apply"},"Apply"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"sudo netplan apply\n")))}c.isMDXComponent=!0}}]);