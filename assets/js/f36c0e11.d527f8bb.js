"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[7159],{15355:(i,n,e)=>{e.r(n),e.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var t=e(75366),o=e(26192);const s={date:new Date("2024-02-26T00:00:00.000Z"),tags:["Math","Programming"]},r="Calculate Pi",l={permalink:"/note/blog/Calculate Pi",source:"@site/blog/Calculate Pi.md",title:"Calculate Pi",description:"Calculating Pi with code",date:"2024-02-26T00:00:00.000Z",formattedDate:"February 26, 2024",tags:[{label:"Math",permalink:"/note/blog/tags/math"},{label:"Programming",permalink:"/note/blog/tags/programming"}],readingTime:2.095,hasTruncateMarker:!0,authors:[],frontMatter:{date:"2024-02-26T00:00:00.000Z",tags:["Math","Programming"]},unlisted:!1,prevItem:{title:"Create SFTP only user in Linux",permalink:"/note/blog/Create SFTP only user in Linux"},nextItem:{title:"Fix CSS no margin when print",permalink:"/note/blog/Fix CSS no margin when print"}},a={authorsImageUrls:[]},c=[{value:"Digits of Pi",id:"digits-of-pi",level:2},{value:"JavaScript",id:"javascript",level:2}];function p(i){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.a)(),...i.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Calculating Pi with code"}),"\n",(0,t.jsxs)(n.p,{children:["$$\n\\pi = 4 \\cdot (1 - \\frac",1,3," + \\frac",1,5," - \\frac",1,7," + ...)\n$$"]}),"\n",(0,t.jsx)(n.h2,{id:"digits-of-pi",children:"Digits of Pi"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://pi2e.ch/blog/2017/03/10/pi-digits-download/",children:"22TB Digits of Pi"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"1K digits of Pi"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989\n"})}),"\n",(0,t.jsx)(n.h2,{id:"javascript",children:"JavaScript"}),"\n",(0,t.jsx)(n.p,{children:"Taylor series"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Ref: ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Taylor_series#Trigonometric_functions",children:"Taylor series - Wikipedia"})]}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Ref: ",(0,t.jsx)(n.a,{href:"http://ajennings.net/blog/a-million-digits-of-pi-in-9-lines-of-javascript.html",children:"A Million Digits of Pi in 9 Lines of Javascript"})]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// 1,000,000 digits validated\n\n// 1n == BigInt(1)\n\nconst digits = 100000n;\n\n// http://ajennings.net/blog/a-million-digits-of-pi-in-9-lines-of-javascript.html\n\nfunction pi(digits) {\n    let i = 1n;\n    let x = 3n * (10n ** (digits + 20n));\n    let pi = x;\n    while (x > 0) {\n        x = x * i / ((i + 1n) * 4n);\n        pi += x / (i + 2n);\n        i += 2n;\n    }\n    return pi / (10n ** 20n);\n};\n\nconsole.time('pi');\nlet piInt = pi(digits);\nconsole.timeEnd('pi');\n\nlet piDigits = piInt.toString();\npiDigits = piDigits.slice(0, 1) + '.' + piDigits.slice(1);\n// console.log(piDigits);\n"})}),"\n",(0,t.jsx)(n.p,{children:"Validate"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"import { open } from 'node:fs/promises';\n\nconst file = await open('./pi.txt');\nconst correctPi = await file.readFile({ encoding: 'utf-8' });\n\nlet i;\n\nfor (i = 0; i < digits; i++) {\n    if (piDigits[i] != correctPi[i]) {\n        console.log(`Digit ${i} is wrong: ${piDigits[i]}, correct digit is ${correctPi[i]}`);\n        break;\n    }\n}\n\nif (i == digits) {\n    console.log('Pi is correct');\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Spigot Algorithm"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Ref: ",(0,t.jsx)(n.a,{href:"https://rosettacode.org/wiki/Pi#Spigot_Algorithm",children:"Pi - Rosetta Code"})]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// 100,000 digits validated\n\n// 1n == BigInt(1)\n\nconst digits = 10000;\n\n// https://rosettacode.org/wiki/Pi#Spigot_Algorithm\n\nfunction pi() {\n    let q = 1n;\n    let r = 180n;\n    let t = 60n;\n    let i = 2n;\n    return () => {\n        let y = (q * (27n * i - 12n) + 5n * r) / (5n * t);\n        let u = 3n * (3n * i + 1n) * (3n * i + 2n);\n        r = 10n * u * (q * (5n * i - 2n) + r - y * t);\n        q = 10n * q * i * (2n * i - 1n);\n        t = t * u;\n        i = i + 1n;\n        return y;\n    };\n};\n\nlet piDigit = pi();\nlet piDigits = [piDigit(), '.'];\n\nconsole.time('pi');\nfor (let i = 1; i < digits; i++) {\n    piDigits.push(piDigit());\n}\nconsole.timeEnd('pi');\n\n// console.log(piDigits.join(''));\n"})}),"\n",(0,t.jsx)(n.p,{children:"Validate"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"import { open } from 'node:fs/promises';\n\nconst file = await open('./pi.txt');\nconst correctPi = await file.readFile({ encoding: 'utf-8' });\n\nlet i;\n\nfor (i = 0; i < digits; i++) {\n    if (piDigits[i] != correctPi[i]) {\n        console.log(`Digit ${i} is wrong: ${piDigits[i]}, correct digit is ${correctPi[i]}`);\n        break;\n    }\n}\n\nif (i == digits) {\n    console.log('Pi is correct');\n}\n"})})]})}function d(i={}){const{wrapper:n}={...(0,o.a)(),...i.components};return n?(0,t.jsx)(n,{...i,children:(0,t.jsx)(p,{...i})}):p(i)}},26192:(i,n,e)=>{e.d(n,{Z:()=>l,a:()=>r});var t=e(97049);const o={},s=t.createContext(o);function r(i){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof i?i(n):{...n,...i}}),[n,i])}function l(i){let n;return n=i.disableParentContext?"function"==typeof i.components?i.components(o):i.components||o:r(i.components),t.createElement(s.Provider,{value:n},i.children)}}}]);