"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[6071],{87485:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(76687);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,h=d["".concat(i,".").concat(m)]||d[m]||c[m]||o;return n?r.createElement(h,l(l({ref:t},u),{},{components:n})):r.createElement(h,l({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var p=2;p<o;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},51228:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(76274),a=(n(76687),n(87485));const o={},l="SSH",s={unversionedId:"Linux/SSH",id:"Linux/SSH",title:"SSH",description:"SSH tunnel",source:"@site/docs/Linux/SSH.md",sourceDirName:"Linux",slug:"/Linux/SSH",permalink:"/note/Linux/SSH",draft:!1,editUrl:"https://github.com/steelywing/note/edit/master/docs/Linux/SSH.md",tags:[],version:"current",frontMatter:{},sidebar:"linux",previous:{title:"SSH tunnel",permalink:"/note/Linux/SSH-Tunnel"},next:{title:"Samba",permalink:"/note/Linux/Samba"}},i={},p=[{value:"SSH tunnel",id:"ssh-tunnel",level:2},{value:"Copy SSH public key to remote host",id:"copy-ssh-public-key-to-remote-host",level:2},{value:"SSH agent",id:"ssh-agent",level:2},{value:"Add SSH private key",id:"add-ssh-private-key",level:3},{value:"Troubleshoot",id:"troubleshoot",level:2}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"ssh"},"SSH"),(0,a.kt)("h2",{id:"ssh-tunnel"},(0,a.kt)("a",{parentName:"h2",href:"/note/Linux/SSH-Tunnel"},"SSH tunnel")),(0,a.kt)("h2",{id:"copy-ssh-public-key-to-remote-host"},"Copy SSH public key to remote host"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ssh-copy-id [<options>] <host>\n")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Option"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"-i <id_rsa.pub>")),(0,a.kt)("td",{parentName:"tr",align:null},"The public key file to be copy, default is ",(0,a.kt)("inlineCode",{parentName:"td"},"~/.ssh/id*.pub"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"-p <port>")),(0,a.kt)("td",{parentName:"tr",align:null},"TCP port")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},'"-o IdentityFile <id_rsa>"')),(0,a.kt)("td",{parentName:"tr",align:null},"Use ",(0,a.kt)("inlineCode",{parentName:"td"},"<id_rsa>")," key file to connect remote host")))),(0,a.kt)("h2",{id:"ssh-agent"},"SSH agent"),(0,a.kt)("p",null,"For ",(0,a.kt)("inlineCode",{parentName:"p"},"sh")," / ",(0,a.kt)("inlineCode",{parentName:"p"},"bash")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"eval $(ssh-agent -s)\n")),(0,a.kt)("p",null,"For ",(0,a.kt)("inlineCode",{parentName:"p"},"csh")," / ",(0,a.kt)("inlineCode",{parentName:"p"},"fish")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"eval (ssh-agent -c)\n")),(0,a.kt)("h3",{id:"add-ssh-private-key"},"Add SSH private key"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ssh-add <private key path>\n")),(0,a.kt)("h2",{id:"troubleshoot"},"Troubleshoot"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Unable to negotiate with XXX.XXX.XXX.XXX port XX: no matching host key type found. Their offer: ssh-rsa,ssh-dss\n")),(0,a.kt)("p",null,"Method 1"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-config",metastring:'title="/etc/ssh/ssh_config"',title:'"/etc/ssh/ssh_config"'},"HostKeyAlgorithms +ssh-rsa\nPubkeyAcceptedAlgorithms +ssh-rsa\n")),(0,a.kt)("p",null,"Method 2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-config",metastring:'title="~/.ssh/config"',title:'"~/.ssh/config"'},"HostKeyAlgorithms +ssh-rsa\nPubkeyAcceptedAlgorithms +ssh-rsa\n")),(0,a.kt)("p",null,"Method 3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-config",metastring:'title="~/.ssh/config"',title:'"~/.ssh/config"'},"Host { <host IP address / host name> | * }\n    HostkeyAlgorithms +ssh-rsa\n    PubkeyAcceptedAlgorithms +ssh-rsa\n")))}c.isMDXComponent=!0}}]);