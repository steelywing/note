(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[1039],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return u},kt:function(){return k}});var l=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,l,r=function(e,t){if(null==e)return{};var a,l,r={},n=Object.keys(e);for(l=0;l<n.length;l++)a=n[l],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(l=0;l<n.length;l++)a=n[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=l.createContext({}),s=function(e){var t=l.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=s(e.components);return l.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var a=e.components,r=e.mdxType,n=e.originalType,i=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),m=s(a),k=r,d=m["".concat(i,".").concat(k)]||m[k]||c[k]||n;return a?l.createElement(d,o(o({ref:t},u),{},{components:a})):l.createElement(d,o({ref:t},u))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=a.length,o=new Array(n);o[0]=m;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var s=2;s<n;s++)o[s]=a[s];return l.createElement.apply(null,o)}return l.createElement.apply(null,a)}m.displayName="MDXCreateElement"},274:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return p},metadata:function(){return i},toc:function(){return s},default:function(){return c}});var l=a(2122),r=a(9756),n=(a(7294),a(3905)),o=["components"],p={},i={unversionedId:"Windows/PowerShell",id:"Windows/PowerShell",isDocsHomePage:!1,title:"PowerShell",description:"Table of Contents",source:"@site/docs/Windows/PowerShell.md",sourceDirName:"Windows",slug:"/Windows/PowerShell",permalink:"/note/Windows/PowerShell",editUrl:"https://github.com/steelywing/note/edit/master/docs/Windows/PowerShell.md",version:"current",frontMatter:{},sidebar:"noteSidebar",previous:{title:"Network",permalink:"/note/Windows/Network"},next:{title:"README",permalink:"/note/Windows/README"}},s=[{value:"Table of Contents",id:"table-of-contents",children:[]},{value:"Help",id:"help",children:[]},{value:"List",id:"list",children:[]},{value:"Alias",id:"alias",children:[]},{value:"Property",id:"property",children:[]},{value:"Filter object",id:"filter-object",children:[]},{value:"Network profile",id:"network-profile",children:[]},{value:"Show TCP listening port",id:"show-tcp-listening-port",children:[]},{value:"Firewall",id:"firewall",children:[]},{value:"PowerShell remoting",id:"powershell-remoting",children:[]},{value:"Trusted host",id:"trusted-host",children:[]},{value:"Get credential from user input",id:"get-credential-from-user-input",children:[]},{value:"PowerShell session",id:"powershell-session",children:[]},{value:"Get drive",id:"get-drive",children:[]},{value:"Run command",id:"run-command",children:[]},{value:"Execution policies",id:"execution-policies",children:[]},{value:"Unblock script that it was downloaded from the Internet",id:"unblock-script-that-it-was-downloaded-from-the-internet",children:[]},{value:"History",id:"history",children:[]},{value:"Hash table",id:"hash-table",children:[]},{value:"Array",id:"array",children:[]},{value:"String",id:"string",children:[]},{value:"Path",id:"path",children:[]},{value:"VLAN",id:"vlan",children:[{value:"Create VLAN interface",id:"create-vlan-interface",children:[]},{value:"Remove VLAN interface",id:"remove-vlan-interface",children:[]}]},{value:"Get system directory",id:"get-system-directory",children:[{value:"List Windows Features",id:"list-windows-features",children:[]}]},{value:"Registry",id:"registry",children:[{value:"Key",id:"key",children:[]},{value:"Value",id:"value",children:[]}]},{value:"Clear MRU (Most Recently Used)",id:"clear-mru-most-recently-used",children:[]},{value:"Get route for IP address",id:"get-route-for-ip-address",children:[]}],u={toc:s};function c(e){var t=e.components,a=(0,r.Z)(e,o);return(0,n.kt)("wrapper",(0,l.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"table-of-contents"},"Table of Contents"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#table-of-contents"},"Table of Contents")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#help"},"Help")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#list"},"List")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#alias"},"Alias")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#property"},"Property")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#filter-object"},"Filter object")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#network-profile"},"Network profile")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#show-tcp-listening-port"},"Show TCP listening port")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#firewall"},"Firewall")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#powershell-remoting"},"PowerShell remoting")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#trusted-host"},"Trusted host")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#get-credential-from-user-input"},"Get credential from user input")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#powershell-session"},"PowerShell session")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#get-drive"},"Get drive")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#run-command"},"Run command")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#execution-policies"},"Execution policies")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#unblock-script-that-it-was-downloaded-from-the-internet"},"Unblock script that it was downloaded from the Internet")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#history"},"History")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#hash-table"},"Hash table")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#array"},"Array")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#string"},"String")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#path"},"Path")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#vlan"},"VLAN"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#create-vlan-interface"},"Create VLAN interface")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#remove-vlan-interface"},"Remove VLAN interface")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#get-system-directory"},"Get system directory"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#list-windows-features"},"List Windows Features")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#registry"},"Registry"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#key"},"Key")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#value"},"Value")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#clear-mru-most-recently-used"},"Clear MRU (Most Recently Used)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#get-route-for-ip-address"},"Get route for IP address"))),(0,n.kt)("h2",{id:"help"},"Help"),(0,n.kt)("p",null," ",(0,n.kt)("inlineCode",{parentName:"p"},"help")," equal ",(0,n.kt)("inlineCode",{parentName:"p"},"Get-Help | more")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"Get-Help [<cmdlet>]\n    [ -ShowWindow ]\n    [ -Detailed | -Full | -Examples ]\n")),(0,n.kt)("p",null,"Get command info"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"Get-Command <command>\n")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Alias: ",(0,n.kt)("inlineCode",{parentName:"p"},"gcm"))),(0,n.kt)("p",null,"PowerShell version"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"$PSVersionTable\n")),(0,n.kt)("h2",{id:"list"},"List"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"<expression>[, ...]\n")),(0,n.kt)("h2",{id:"alias"},"Alias"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"Get-Alias [[-Name] <alias> | -Definition <cmdlet>]\n")),(0,n.kt)("h2",{id:"property"},"Property"),(0,n.kt)("p",null,"Get the properties and methods of objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"<cmdlet> | Get-Member\n")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Alias: ",(0,n.kt)("inlineCode",{parentName:"p"},"gm"))),(0,n.kt)("p",null,"Select property"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"<command> | Select-Object [[-Property] <property[]>]\n")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Alias: ",(0,n.kt)("inlineCode",{parentName:"p"},"select"))),(0,n.kt)("p",null,"Expand property"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"<command> | Select-Object -ExpandProperty <property>\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"(<command>).<property>\n")),(0,n.kt)("p",null,"Create property"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},'<command> | Select-Object @{N[ame]="<property name>"; E[xpression]={<expression>}}\n')),(0,n.kt)("h2",{id:"filter-object"},"Filter object"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"<command> | Where-Object [-FilterScript] { <Script> }\n\n# Example\n1, 2, 3, 4, 5, 6 | ? { $_ % 2 -eq 0 }\n# 2 4 6\n")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Alias: ",(0,n.kt)("inlineCode",{parentName:"p"},"?"))),(0,n.kt)("h2",{id:"network-profile"},"Network profile"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"Get-NetConnectionProfile\n\nSet-NetConnectionProfile\n    { -InterfaceIndex <ID> | -Name <name> }\n    -NetworkCategory { Private | Public }\n")),(0,n.kt)("h2",{id:"show-tcp-listening-port"},"Show TCP listening port"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"Get-NetTCPConnection -State Listen [-LocalPort <port>]\n")),(0,n.kt)("h2",{id:"firewall"},"Firewall"),(0,n.kt)("p",null,"Allow ICMP echo request"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},'New-NetFirewallRule `\n    -DisplayName "ICMPv4 echo request" `\n    -Direction Inbound `\n    -Protocol ICMPv4 `\n    -IcmpType 8 `\n    -Action Allow\n\nNew-NetFirewallRule `\n    -DisplayName "ICMPv6 echo request" `\n    -Direction Inbound `\n    -Protocol ICMPv6 `\n    -IcmpType 8 `\n    -Action Allow\n')),(0,n.kt)("h2",{id:"powershell-remoting"},"PowerShell remoting"),(0,n.kt)("p",null,"Enable PowerShell remoting"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"Enable-PSRemoting [-SkipNetworkProfileCheck] [-Force]\n")),(0,n.kt)("h2",{id:"trusted-host"},"Trusted host"),(0,n.kt)("p",null,"Get trusted host"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"winrm get winrm/config/client\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"Get-Item WSMan:\\localhost\\Client\\TrustedHosts\n")),(0,n.kt)("p",null,"Set trusted host"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},'winrm set winrm/config/client @{TrustedHosts="<host>[,<host>]"}\n')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},'# <host> = <IP> | <hostname> | *\nSet-Item WSMan:\\localhost\\Client\\TrustedHosts -Value "<host>[,<host>]" [-Force]\n')),(0,n.kt)("h2",{id:"get-credential-from-user-input"},"Get credential from user input"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"Get-Credential [[-UserName] <username>]\n")),(0,n.kt)("h2",{id:"powershell-session"},"PowerShell session"),(0,n.kt)("p",null,"Create PowerShell session"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"$<variable> = New-PSSession\n    [[-ComputerName] <host[]>]\n    [-Credential { <user> | <credential> }]\n")),(0,n.kt)("p",null,"Connect to remote PowerShell"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"Enter-PSSession\n    [-ComputerName] <host>\n    [-Credential { <user> | <credential> }]\n")),(0,n.kt)("h2",{id:"get-drive"},"Get drive"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"Get-PSDrive\n")),(0,n.kt)("h2",{id:"run-command"},"Run command"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://social.technet.microsoft.com/wiki/contents/articles/7703.powershell-running-executables.aspx#The_Call_Operator_amp"},"Referense")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"Invoke-Command [[-ComputerName] <host[]>]\n    [-ScriptBlock] <ScriptBlock>\n    [-Credential <PSCredential>]\n    [-ArgumentList <argument[]>]\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"& <ScriptBlock> [<argument[]>]\n")),(0,n.kt)("h2",{id:"execution-policies"},"Execution policies"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_execution_policies?view=powershell-6"},"Reference"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"Get-ExecutionPolicy\nSet-ExecutionPolicy <policy>\n")),(0,n.kt)("h2",{id:"unblock-script-that-it-was-downloaded-from-the-internet"},"Unblock script that it was downloaded from the Internet"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"Unblock-File <path>\n")),(0,n.kt)("h2",{id:"history"},"History"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"Get-History\n")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Alias: ",(0,n.kt)("inlineCode",{parentName:"p"},"history"))),(0,n.kt)("p",null,"Search history"),(0,n.kt)("kbd",null,"Ctrl + R"),(0,n.kt)("p",null,"Get all session history"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"Get-Content (Get-PSReadlineOption).HistorySavePath\n")),(0,n.kt)("h2",{id:"hash-table"},"Hash table"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_hash_tables"},"Reference"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"$hash = @{\n    <name> = <value>;\n    [<name> = <value>] ...\n}\n")),(0,n.kt)("p",null,"List keys"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"$hash.Keys\n")),(0,n.kt)("p",null,"List values"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"$hash.Values\n")),(0,n.kt)("p",null,"Add"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"$hash[<key>] = <value>\n$hash.Add(<key>, <value>)\n")),(0,n.kt)("p",null,"Remove"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"$hash.Remove(<key>)\n")),(0,n.kt)("h2",{id:"array"},"Array"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_arrays"},"Reference"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"$array = <value>, <value>[, ...]\n$array = @([<value>[, ...]])\n")),(0,n.kt)("p",null,"Range"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"$array = <start>..<end>\n")),(0,n.kt)("p",null,"Count"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"$array.Count\n")),(0,n.kt)("p",null,"Get element"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"$array[<index>]\n")),(0,n.kt)("p",null,"Set element"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"$array[<index>] = <value>\n")),(0,n.kt)("p",null,"Slice"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"$array[<index>..<index>]\n")),(0,n.kt)("p",null,"Iteration"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"foreach ($element in $array) {\n    # $element\n}\n\n$array.ForEach({\n    # $PSItem == $_ == <current element>\n})\n")),(0,n.kt)("p",null,"Filter"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"$array.Where({\n    # $PSItem == $_ == <current element>\n})\n")),(0,n.kt)("h2",{id:"string"},"String"),(0,n.kt)("p",null,"Format string"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},'<format> -f <value>[, ...]\n\n"{0} is {1}" -f "Life", "great"\n')),(0,n.kt)("p",null,"Filter string"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},'<command> | Select-String "<pattern>"\n')),(0,n.kt)("p",null,"Concatenate string"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},'"$A $B"\n')),(0,n.kt)("h2",{id:"path"},"Path"),(0,n.kt)("p",null,"Get script path"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"$Script:MyInvocation.MyCommand.Path\n")),(0,n.kt)("p",null,"Get file name of path"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"Split-Path -Leaf <path>\n")),(0,n.kt)("p",null,"Get folder of path"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"Split-Path <path>\n")),(0,n.kt)("p",null,"Join path"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"Join-Path <path> <path> ...\n")),(0,n.kt)("h2",{id:"vlan"},"VLAN"),(0,n.kt)("h3",{id:"create-vlan-interface"},"Create VLAN interface"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Enable Hyper-V virtual switch"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V-Services\n"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Enable Hyper-V tools"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V-Tools-All\n"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Add external virtual switch"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},'$ethernet = Get-NetAdapter -Name "Ethernet"\nNew-VMSwitch -Name "External Switch" -NetAdapterName $ethernet.Name -AllowManagementOS $true\n'))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Add VLAN interface"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},'Add-VMNetworkAdapter -ManagementOS -Name "<name>"\nSet-VMNetworkAdapterVlan -ManagementOS -VMNetworkAdapterName "<name>" -Access -VlanId <VLAN ID>\n')))),(0,n.kt)("h3",{id:"remove-vlan-interface"},"Remove VLAN interface"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},'Remove-VMNetworkAdapter -ManagementOS -Name "<name>"\n')),(0,n.kt)("h2",{id:"get-system-directory"},"Get system directory"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"[System.Environment]::SystemDirectory\n")),(0,n.kt)("h3",{id:"list-windows-features"},"List Windows Features"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"Get-WindowsOptionalFeature -Online\n")),(0,n.kt)("h2",{id:"registry"},"Registry"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"cd Registry::\ncd HKCU:\ncd HKLM:\n")),(0,n.kt)("h3",{id:"key"},"Key"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/powershell/scripting/samples/working-with-registry-keys?view=powershell-7"},"Reference"))),(0,n.kt)("p",null,"List keys"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"ls [<key path>]\n")),(0,n.kt)("p",null,"Create key"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"ni <key path>\n")),(0,n.kt)("p",null,"Delete key"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"ri <key path>\n")),(0,n.kt)("h3",{id:"value"},"Value"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/powershell/scripting/samples/working-with-registry-entries?view=powershell-7"},"Reference"))),(0,n.kt)("p",null,"Get values"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"gp <key path> [-Name <name>]\n")),(0,n.kt)("p",null,"Set value"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"sp <key path>\n  -Name <name>\n  -Value <value>\n  [-Type { Binary | DWord | QWord | ExpandString | MultiString | String }]\n")),(0,n.kt)("p",null,"Remove value"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"rp <key path> -Name <name>\n")),(0,n.kt)("h2",{id:"clear-mru-most-recently-used"},"Clear MRU (Most Recently Used)"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},'sp "HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RunMRU\\" -Name MRUList -Type String -Value ""\n')),(0,n.kt)("h2",{id:"get-route-for-ip-address"},"Get route for IP address"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"Find-NetRoute -RemoteIPAddress <IP address>\n")))}c.isMDXComponent=!0}}]);