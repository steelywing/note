"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[2253],{87485:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(76687);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),k=u(n),d=a,g=k["".concat(p,".").concat(d)]||k[d]||s[d]||l;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=k;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var u=2;u<l;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},38716:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var r=n(76274),a=(n(76687),n(87485));const l={},i="WireGuard",o={unversionedId:"Network/WireGuard",id:"Network/WireGuard",title:"WireGuard",description:"Ref: Quick Start",source:"@site/docs/Network/WireGuard.md",sourceDirName:"Network",slug:"/Network/WireGuard",permalink:"/note/Network/WireGuard",draft:!1,editUrl:"https://github.com/steelywing/note/edit/master/docs/Network/WireGuard.md",tags:[],version:"current",frontMatter:{},sidebar:"network",previous:{title:"Static Key",permalink:"/note/Network/OpenVPN/Static Key"}},p={},u=[{value:"Key Generation",id:"key-generation",level:2},{value:"CLI",id:"cli",level:2},{value:"Config",id:"config",level:2},{value:"Show status",id:"show-status",level:2},{value:"Show config",id:"show-config",level:2},{value:"<code>wg-quick</code>",id:"wg-quick",level:2},{value:"OpenWRT",id:"openwrt",level:2}],c={toc:u};function s(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"wireguard"},"WireGuard"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Ref: ",(0,a.kt)("a",{parentName:"p",href:"https://www.wireguard.com/quickstart/"},"Quick Start"))),(0,a.kt)("h2",{id:"key-generation"},"Key Generation"),(0,a.kt)("p",null,"Private Key"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"umask 077\nwg genkey > private-key\n")),(0,a.kt)("p",null,"Public Key"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"wg pubkey < private-key > public-key\n")),(0,a.kt)("p",null,"Private and Public Key"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"wg genkey | tee private-key | wg pubkey > public-key\n")),(0,a.kt)("h2",{id:"cli"},"CLI"),(0,a.kt)("p",null,"Peer A"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Public IP ",(0,a.kt)("inlineCode",{parentName:"li"},"1.1.1.1")),(0,a.kt)("li",{parentName:"ul"},"LAN ",(0,a.kt)("inlineCode",{parentName:"li"},"10.0.1.0/24")),(0,a.kt)("li",{parentName:"ul"},"UDP port ",(0,a.kt)("inlineCode",{parentName:"li"},"10100"))),(0,a.kt)("p",null,"Peer B"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Public IP: ",(0,a.kt)("inlineCode",{parentName:"li"},"2.2.2.2")),(0,a.kt)("li",{parentName:"ul"},"LAN: ",(0,a.kt)("inlineCode",{parentName:"li"},"10.0.2.0/24")),(0,a.kt)("li",{parentName:"ul"},"UDP port ",(0,a.kt)("inlineCode",{parentName:"li"},"random"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ip link add dev wg0 type wireguard\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Peer A"',title:'"Peer','A"':!0},"ip address add dev wg0 10.0.0.1/24\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Peer B"',title:'"Peer','B"':!0},"ip address add dev wg0 10.0.0.2/24\n")),(0,a.kt)("p",null,"If only 2 peers, peer to peer also works"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ip address add dev wg0 10.0.0.1 peer 10.0.0.2\n")),(0,a.kt)("p",null,"Use config file"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"wg setconf wg0 wg0.conf\n")),(0,a.kt)("p",null,"or CLI"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Peer A\nwg set wg0 listen-port 10100 private-key /path/to/private-key peer <peer B public key> allowed-ips 10.0.0.2/32,10.0.2.0/24\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Peer B\nwg set wg0 listen-port 10100 private-key /path/to/private-key peer <peer A public key> allowed-ips 10.0.0.1/32,10.0.1.0/24 endpoint 1.1.1.1:10100\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ip link set up dev wg0\n")),(0,a.kt)("h2",{id:"config"},"Config"),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"AllowedIPs")," cannot overlap, WireGuard use ",(0,a.kt)("inlineCode",{parentName:"p"},"AllowedIPs")," to choose peer")),(0,a.kt)("p",null,"Peer A"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ini"},"[Interface]\nAddress = 10.0.0.1/24\nPrivateKey = 4IMHVUu9Ug0oujxxWdOiZXMQ74Sq5gag5ND6cbaIQX4=\nListenPort = 10100\n\n[Peer]\nPublicKey = /QgJoWF3KA2K5CHPfIc/T0KhXKuFe1k5V75mQuK5vEo=\nAllowedIPs = 10.0.0.2/32, 10.0.2.0/24\n")),(0,a.kt)("p",null,"Peer B"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ini"},"[Interface]\nAddress = 10.0.0.2/24\nPrivateKey = AM/sFBkkiMGL4iGUMV1RO+cVmeaHcE5uGg/xxUoDsH0=\n\n[Peer]\nPublicKey = cWlZ8WRv4D0bGACuHwXGfmudZeMsFDYiVSmjPlVc0ko=\nAllowedIPs = 10.0.0.1/32, 10.0.1.0/24\n\n# for routing all traffic to Peer A\n# AllowedIPs = 0.0.0.0/0\n")),(0,a.kt)("h2",{id:"show-status"},"Show status"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"wg\n")),(0,a.kt)("h2",{id:"show-config"},"Show config"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"wg showconf\n")),(0,a.kt)("h2",{id:"wg-quick"},(0,a.kt)("inlineCode",{parentName:"h2"},"wg-quick")),(0,a.kt)("p",null,"Setup interface using config in ",(0,a.kt)("inlineCode",{parentName:"p"},"/etc/wireguard/")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Use /etc/wireguard/wgnet0.conf\nwg-quick up wgnet0\n")),(0,a.kt)("p",null,"or"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"wg-quick up /path/to/wgnet0.conf\n")),(0,a.kt)("h2",{id:"openwrt"},"OpenWRT"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"opkg install luci-app-wireguard\n/etc/init.d/network restart\n")))}s.isMDXComponent=!0}}]);